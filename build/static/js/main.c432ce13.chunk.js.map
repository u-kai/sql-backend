{"version":3,"sources":["components/atoms/Bottun_MatirialUI.tsx","components/atoms/TextFiled_MaterialUI.tsx","functions/tableFunctions.ts","components/atoms/Alert_MaterialUI.tsx","store/dbInfo.ts","components/pages/Login.tsx","components/atoms/ButtonAppBar-MaterialUI.tsx","types/styledTypes/commonStyles/AutoCorrectStyles.ts","functions/returnStyle.ts","components/atoms/Input.tsx","components/atoms/CopyBox.tsx","components/atoms/CopySpan.tsx","components/atoms/TailSpan.tsx","components/molecules/InputAndCopy.tsx","components/atoms/Label.tsx","components/organisms/InputAndCopyAndLabel.tsx","components/atoms/AutoCorrect.tsx","components/atoms/AutoCorrectBox.tsx","components/molecules/AutoCorrects.tsx","datas/Datas.ts","store/colorList.ts","hocks/useColorList.ts","store/focusRowIndex.ts","store/sentences.ts","hocks/useEditer.ts","hocks/useFocusRowIndex.ts","hocks/useAutoCorrects.ts","hocks/useAutoCorrecters.ts","hocks/useIsDisplayAutoCorrects.ts","hocks/useFocusAutoCorrectIndex.ts","hocks/useAutoCorrectsPosition.ts","functions/editerFucntions.ts","components/organisms/EditerAndAutoCorrects.tsx","components/atoms/Image.tsx","components/molecules/ImageToButton.tsx","components/atoms/ReadFile.tsx","components/molecules/LabelAndFileReader.tsx","components/molecules/FileReaderOnIcon.tsx","components/molecules/SaveFileOnIcon.tsx","components/organisms/FolderAndEditer.tsx","components/organisms/EditersAndButton.tsx","components/atoms/Table.tsx","components/molecules/TextareaAndImage.tsx","components/atoms/TransformInput.tsx","components/atoms/SQLErrors.tsx","components/atoms/StatusMessage.tsx","store/provideDBInfo.ts","components/organisms/TextareaToSQL.tsx","components/organisms/TextareaCreateprops.tsx","components/atoms/TableEditer.tsx","components/organisms/TextareInsertProps.tsx","components/atoms/OtherList.tsx","components/pages/SQLExecuters.tsx","router/HomeRoutes.tsx","router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","spacing","ContainedButtons","props","classes","value","color","onClick","className","Button","variant","style","zIndex","width","BasicTextFields","label","handleChange","id","height","type","noValidate","autoComplete","TextField","onChange","postDataAndReturnResposeJson","sendDatas","url","fetch","bodyData","method","mode","headers","body","JSON","stringify","then","res","json","marginTop","SimpleAlerts","message","severity","Alert","AlertTitle","toUpperCase","userState","atom","key","default","passwordState","hostState","dbState","Login","useRecoilState","user","setUser","password","setPassword","host","setHost","db","setDB","useState","error","setError","history","useHistory","stateList","setFunctions","e","target","Contener","InputContener","Title","map","state","i","TextFieldContener","ButtonContener","results","push","ErrorContener","length","styled","div","flexGrow","menuButton","marginRight","title","ButtonAppBar","buttons","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","button","InputAndCopyBoxStyle","returnStyle","display","flexWrap","marginBottom","marginLeft","paddingTop","paddingBottom","paddingRight","paddingLeft","backgroundColor","overflow","gridTemplateRows","gridTemplateColumns","gridRow","gridColumn","outline","fontSize","fontFamily","top","left","visibility","Input","undefined","handleKeyDown","placeholder","onScroll","styles","SInput","spellCheck","onKeyDown","input","CopyBox","children","SCopyBox","toString","CopySpan","SCopySpan","span","TailSpan","STailSpan","InputAndCopy","index","colorList","sentence","split","phrase","pharaseIndex","Label","htmlFor","textContent","SBox","SLabel","InputAndCopyAndLabel","AutoCorrect","opacity","handleClick","handleMouseDown","SAutoCorrect","onMouseEnter","AutoCorrectBox","posi","autoCorrectNumber","SAutoCorrectBox","x","y","AutoCorrects","autoCorrects","focusAutoCorrectsIndex","ChangeColorRegDatas","colorListState","whatWordColor","word","isExistRegData","isWordMatch","toLocaleLowerCase","removeLastList","list","filter","_","focusRowIndexState","sentencesState","useEditer","setColorList","sentences","setSentences","addRowColorList","removeRowColorList","updateColorList","wordList","clones","wordIndex","useColorList","focusRowIndex","setFocusIndex","focusElement","document","getElementById","focus","console","log","moveFocusToClickedElement","focusIdPrefix","currentTarget","Number","replace","incrementFocusRowIndex","decrementFocusRowIndex","useFocusRowIndex","useRecoilValue","updateSentences","newCharacter","clone","slice","addInitRowDatas","removeRowDatas","removeRowSentence","isFocusRowSentencesNull","isFocusRowIndexInit","isFocusRowIndexEnd","useAutoCorrects","setAutoCorrect","sortAutoCorrect","matchAutoCorrects","wordLength","test","findAutoCorrect","primaryList","noPrimaryList","reg","RegExp","useAutoCorrecters","isDisplayAutoCorrects","setIsDisplayAutoCorrects","notDisplayAutoCorrects","displayAutoCorrects","useIsDisplayAutoCorrects","setFocusAutoCorrectsIndex","initFocusAutoCorrectsIndex","incrementFocusAutoCorrectsIndex","decrementFocusAutoCorrectsIndex","handleMouseDownToSelectAutoCorrect","hoverId","parseInt","useFocusAutoCorrectIndex","autoCorrectsPosition","setAutoCorrectsPosition","getAutoCorrectsPosition","prefixId","tail","ajustTop","ajustleft","window","pageXOffset","getBoundingClientRect","pageYOffset","getAndSetAutoCorrectsPosition","useAutoCorrectsPosition","initAutoCorrects","wordDivide","EditerAndAutoCorrects","labelPosition","setLabelPosition","rowPosition","setRowPosition","didEnterNewCharacters","newSenetence","handleChanges","lastWord","CaseDisplayAutoCorrectsHandleKeyDown","selectedAutoCorrect","beforeInsertAutoCorrect","words","join","deleteLastWord","newSentences","CaseNotDisplayAutoCorrectsHandleKeyDown","handleAnyKeyOnInput","useEffect","scroll","cloneRowPosition","scrollHeight","disty","scrollLeft","changeStr","currentStrList","removeMatchChar","rowIndex","Image","src","SImage","img","ImageToButton","contenerStyles","imageStyle","contenerStyle","hoverWord","isMouseEnter","setIsMouseEnter","onMouseLeave","HoverText","ReadFile","useSetRecoilState","reader","FileReader","file","addEventListener","result","newSenetences","tempList","newColorList","files","readAsText","LabelAndFileReader","FileReaderOnIcon","SaveFileOnIcon","text","fileName","blob","Blob","URL","createObjectURL","a","createElement","download","href","click","remove","revokeObjectURL","FolderAndEditer","setFileName","FolderContener","start","end","EditerContener","EditersAndButton","EditersContener","Table","columns","rows","headerKey","bodyKey","tableKey","cellElements","STable","STHeader","STr","column","STh","STBody","row","columnType","columnIndex","table","tr","th","thead","tbody","TextareaAndImage","STextArea","textarea","TransformInput","lineColor","defaultChildren","onBlur","setColor","isInput","setIsInput","SGroup","SPasswordBox","SPassword_inner","onFocus","onBlurCapture","SP","SPasswordString","attrs","errorType","SQLErrors","errors","LineContener","Errors","messageType","StatusMessage","statusMessage","SQLStatusMessage","useDBInfo","database","TextareaToSQL","initColumns","CloneClass","sqlType","initState","setErrors","tableName","setTableName","setResults","multiLineCells","setMultiLineCells","setColumns","dbConfig","Object","assign","sendTableName","dbInfo","columnsName","filed","Default","Field","newRow","ImageContener","copyTable","condition","joinRowCells","not2Dimensions","cell","alert","caseNotTable","cloneClass","makeClone","TitleContener","toLocaleUpperCase","TableContener","SSelect","defaultValue","SOption","TableTextArea","ButtonsContener","resultsTemp","isDataExist","select","option","constColumns","TextareaCreateProps","MultiLineCellsClone","DataName","this","joinRow","nameAndType","DataType","Option","IsPrimary","IsNull","cells","setOneLineCells","appendCells","TableSpan","TextareaInsertProps","ColumnValueClone","columnsValues","copyDatas","values","columnsAndValues","setOneLineValues","appendColumnValuse","OtherList","otherList","other","OtherResults","SQLExrcuters","setRows","IorC","setIorC","errorMessages","setErrorMessages","otherResults","setOtherResults","returnQuerys","oneLineQuery","substr","HeaderContener","querys","data","Map","entries","cloneColumns","cloneValues","valuesBuff","forEach","columnsList","keys","dataValuse","others","displayOther","CopyDBContener","Results","TablesConetener","TableContainer","homeRoutes","path","exact","Router","render","match","route","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c432ce13.chunk.js","sourcesContent":["import React,{VFC} from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }),\n);\ntype Props = {\n    value?:string\n    color?:\"default\" | \"inherit\" | \"primary\" | \"secondary\" | undefined\n    onClick?:(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\nexport const ContainedButtons:VFC<Props> = (props) => {\n  const classes = useStyles();\n  const {value=\"Primary\",color=\"primary\",onClick} = props\n  return (\n    <div className={classes.root}>\n      <Button variant=\"contained\" color={color} style={{zIndex:7}}  onClick={onClick}>\n        {value}\n      </Button>\n    </div>\n    )\n  }","import React,{VFC} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }),\n);\n\ntype Props = {\n    label?:string\n    id?:string\n    //styles?:StyledType\n    width?:number\n    height?:number\n    handleChange?:(event: React.ChangeEvent<HTMLInputElement>) => void\n    value:string\n    type?:\"text\" | \"password\" \n}\nexport const  BasicTextFields:VFC<Props> = (props) => {\n  const {label=\"\",id,width=100,height=30,handleChange,value,type=\"text\"} = props\n  const classes = useStyles();\n  // const strStyeles = returnStyle(styles)\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" >\n      <TextField \n      id=\"standard-basic\" \n      type={type}\n      label={label} \n      autoComplete=\"on\" \n      onChange={handleChange}\n      value={value}/>\n      </form>  \n  );\n}","export const  makeRequest = (bodyData:Object):RequestInit=>{\n    return {\n            method:\"POST\",\n            mode:\"cors\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(bodyData)\n        }\n    }\nexport const postDataAndReturnResposeJson = (sendDatas:Object,url:string) => {\n    return fetch(`http://127.0.0.1:8000/${url}`,makeRequest(sendDatas)).then((res)=>res.json())\n}\n\ntype CreateOrInsert = \"create\" | \"insert\"\nexport const caseNotTable = (copyTable:string,condition:CreateOrInsert) => {\n    const joinRowCells = copyTable.split(\"\\n\")\n    if(condition === \"create\"){\n        const not2Dimensions = joinRowCells.filter((cell)=>cell.split(\"\\t\").length < 2)\n        if(joinRowCells.length===not2Dimensions.length){\n            alert(\"テーブルを挿入してくだい\")\n            return true\n        }\n    }else if(condition === \"insert\"){\n        if(joinRowCells.length < 2){\n            alert(\"2行以上挿入してくだい\")\n            return true\n        }\n    }\n    return false\n}","import React,{VFC} from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }),\n);\n\ntype Props = {\n    message:string\n    severity: \"error\" | \"success\" | \"info\" | \"warning\" | undefined\n}\n\nexport const SimpleAlerts:VFC<Props> = (props) =>  {\n  const classes = useStyles();\n  const { message, severity = \"error\"} = props\n  return (\n    <div className={classes.root}>\n      <Alert variant=\"outlined\" severity={severity}>\n      <AlertTitle>{severity.toUpperCase()}</AlertTitle>\n       {message}\n      </Alert>\n    </div>\n  );\n}","import {atom} from \"recoil\"\n\nexport const userState = atom<string>({\n    key:\"userState\",\n    default: \"root\"\n})\nexport const passwordState = atom<string>({\n    key:\"passwordState\",\n    default: \"\"\n})\nexport const hostState = atom<string>({\n    key:\"hostState\",\n    default: \"localhost\"\n})\nexport const dbState = atom<string>({\n    key:\"dbState\",\n    default: \"firstwebapp\"\n})\n","import styled from \"styled-components\"\nimport {useState} from \"react\"\nimport {ContainedButtons} from \"../atoms/Bottun_MatirialUI\"\nimport {BasicTextFields} from \"../atoms/TextFiled_MaterialUI\"\nimport {postDataAndReturnResposeJson} from \"functions/tableFunctions\"\nimport {useHistory} from \"react-router-dom\"\nimport {SimpleAlerts} from \"../atoms/Alert_MaterialUI\"\nimport {userState,hostState,passwordState,dbState} from \"store/dbInfo\"\nimport {useRecoilState} from \"recoil\"\n\nexport const Login = () => {\n    // const {user,password,host,db} = props\n    const [user,setUser] = useRecoilState(userState)\n    const [password,setPassword] = useRecoilState(passwordState)\n    const [host,setHost] = useRecoilState(hostState)\n    const [db,setDB] = useRecoilState(dbState)\n    const [error,setError] = useState(\"\")\n    const url = \"submitUser\"\n    const history = useHistory()\n    const inputList:[\"user\",\"password\",\"host\",\"db\"] = [\"user\",\"password\",\"host\",\"db\"]\n    const stateList = [user,password,host,db]\n    const setFunctions = {\n        \"user\":(e: React.ChangeEvent<HTMLInputElement>)=>setUser(e.target.value),\n        \"password\":(e: React.ChangeEvent<HTMLInputElement>)=>setPassword(e.target.value),\n        \"host\":(e: React.ChangeEvent<HTMLInputElement>)=>setHost(e.target.value),\n        \"db\":(e: React.ChangeEvent<HTMLInputElement>)=>setDB(e.target.value)\n    }\n    const onClick = () => {\n        const sendData = {\n            user:user,\n            password:password,\n            host:host,\n            db:db\n        }\n        postDataAndReturnResposeJson(sendData,url)\n        .then((results:{results:{message:string}}|undefined)=>{\n            if(results?.results){\n                setError(results.results.message)\n            }else{\n                history.push(\"/executers\")\n            }\n        })\n    }\n\n    return(\n        <Contener>\n            <InputContener>\n            <Title>\n                Connection MySQL\n            </Title>\n            {inputList.map((state,i)=>(\n                <TextFieldContener>\n                     <BasicTextFields\n                        type={state===\"password\" ? (\"password\") : (\"text\")}\n                        value={stateList[i]}\n                        label={state}\n                        handleChange={setFunctions[state]}/>\n                </TextFieldContener>\n            ))}\n            <ButtonContener>\n            <ContainedButtons\n                value={\"connection\"}\n                onClick={onClick}\n            />\n            </ButtonContener>\n            </InputContener>\n            <ErrorContener>\n                {error.length !== 0 ? (\n                    <SimpleAlerts message={error} severity={\"error\"}/>\n                ):(\n                    null\n                )}\n            </ErrorContener>\n        </Contener>\n    )\n}\n\nconst Contener = styled.div`\nwidth:100%;\nheight:100%;\ndisplay:grid;\ngrid-template-rows:30% 60% 1fr;\ngrid-template-columns:38% 24% 38%;\n`\nconst InputContener = styled.div`\nwidth:350px;\nheight:400px;\ngrid-row:2/3;\ngrid-column:2/3;\n// display:flex;\n// align-items:center;\n// justify-content:center;\nborder:solid 2px #95949a;\noverflow:auto;\n`\nconst ErrorContener = styled.div`\nposition:absolute;\nleft:35%;\ntop:1%;\n`\nconst TextFieldContener = styled.div`\nwidth:100%;\nheight:50px;\ndisplay:flex;\njustify-content:center;\npadding-bottom:20px;\n`\nconst ButtonContener = styled.div`\n\ndisplay:flex;\njustify-content:center;\n`\n\nconst Title = styled.div`\nfont-size:30px;\nfont-weight:bold;\ndisplay:flex;\njustify-content:center;\nborder-bottom:solid 2px #95949a;\n`","\nimport {VFC} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {ContainedButtons} from \"../atoms/Bottun_MatirialUI\"\nimport {useRecoilValue,useRecoilState} from \"recoil\"\nimport {passwordState} from \"store/dbInfo\"\nimport {BasicTextFields} from \"../atoms/TextFiled_MaterialUI\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\n\ntype Props = {\n    buttons?:string[]\n    onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)[] | undefined\n    color?: \"inherit\" | \"transparent\" | \"default\" | \"primary\" | \"secondary\" | undefined\n    title?:string\n    futter?:boolean\n}\nexport const ButtonAppBar:VFC<Props> = (props) => {\n  const classes = useStyles();\n  const [password,setPassword] = useRecoilState(passwordState)\n  const {buttons,onClick,color=\"secondary\",title=\"SQL-EXECUTERS\"} = props\n  return (\n     <div className={classes.root}>\n      <AppBar position=\"static\" color={color}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          <BasicTextFields \n            value={password} \n            handleChange={(e)=>{setPassword(e.target.value)}} \n            type=\"password\" \n            label={\"Enter password to reconnection\"}\n            />\n            {buttons?.map((button,i)=>(\n                <ContainedButtons onClick={onClick![i]} color={\"primary\"} value={button}></ContainedButtons>\n            ))}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","export const InputAndCopyBoxStyle =  \n`\nborder-bottom-width:1px;\nborder-left-width:0;\nborder-right-width:0;\nborder-top-width:0;\nfont-style:normal;\nfont-variant:normal;\nfont-weight:normal;\nletter-spacing:0px;\nword-spacing:0px;\nline-height:normal;\npadding-bottom:5px;\npadding-left:5px;\npadding-right:5px;\npadding-top:5px;\ntext-decoration:none;\nwidth:1000px;\nborder-bottom:solid #e7e7eb 1px;\n`","import {StyledType} from \"../types/styledTypes/styledType\"\n\nexport const returnStyle = (props:StyledType | undefined):string|undefined => {\n    if(props){\n        return(\n            `\n    position:${props.position};\n    display:${props.display};\n    flex-wrap:${props.flexWrap};\n    width:${props.width};\n    height:${props.height};\n    margin-top:${props.marginTop};\n    margin-bottom:${props.marginBottom};\n    margin-right:${props.marginRight};\n    margin-left:${props.marginLeft};\n    padding-top:${props.paddingTop};\n    padding-bottom:${props.paddingBottom};\n    padding-right:${props.paddingRight};\n    padding-left:${props.paddingLeft};\n    background-color:${props.backgroundColor};\n    overflow:${props.overflow};\n    grid-template-rows:${props.gridTemplateRows};\n    grid-template-columns:${props.gridTemplateColumns};\n    grid-row:${props.gridRow};\n    grid-column:${props.gridColumn};\n    outline:${props.outline};\n    color:${props.color};\n    font-size:${props.fontSize};\n    font-family:${props.fontFamily};\n    top:${props.top};\n    left:${props.left};\n    visibility:${props.visibility};\n            `\n        )\n    }\n    return undefined\n\n}\n\n","import styled from \"styled-components\"\nimport {VFC} from \"react\"\nimport {InputAndCopyBoxStyle} from \"../../types/styledTypes/commonStyles/AutoCorrectStyles\"\nimport {StyledType} from \"../../types/styledTypes/styledType\"\nimport {returnStyle} from \"../../functions/returnStyle\"\n\n\nexport type Props = {\n    id?:string\n    type:\"password\" | \"text\" | \"checkbox\" \n    autoComplete?:\"on\" | \"off\"\n    value?:string | undefined\n    handleKeyDown?:(e:React.KeyboardEvent<HTMLInputElement>)=>void\n    handleChange?:(e:React.ChangeEvent<HTMLInputElement>)=>void\n    onClick?:(e: React.MouseEvent<HTMLInputElement, MouseEvent>) => void\n    onScroll?:(event: React.UIEvent<HTMLInputElement, UIEvent>) => void\n    outline?:string\n    placeholder?:string\n    style?:StyledType\n}\n\nexport const Input:VFC<Props> =(props)=>{\n    const {id, type, autoComplete, value=undefined, handleKeyDown, handleChange\n        ,placeholder=\"\",onClick,onScroll,style} = props\n    const styles = returnStyle(style)\n    return (\n        <SInput\n        styles={styles}\n        spellCheck=\"false\"\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        autoComplete={autoComplete}\n        value={value}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onClick={onClick}\n        onScroll={onScroll}></SInput>\n      \n    )\n}\n\nconst SInput = styled.input<{styles:string | undefined}>`\n${InputAndCopyBoxStyle}\nbackground-color:transparent;\nposition:absolute;\ncaret-color:black;\ncolor:transparent;\noutline:none;\nz-index:2;\nfont-size:15px;\noverflow:auto;\n${props=>props.styles}\n`","import { VFC,ReactNode} from \"react\"\nimport styled from \"styled-components\"\nimport {InputAndCopyBoxStyle} from \"../../types/styledTypes/commonStyles/AutoCorrectStyles\"\nimport { Overflow } from \"../../types/StyleType\"\n\nexport type Props = {\n    id?:string\n    children:ReactNode\n    fontFamily?:string\n    fontSize?:number\n    overflow?:Overflow\n}\n\nexport const CopyBox:VFC<Props> = (props)=>{\n    const {id, children, fontFamily=\"'Tahoma'\", fontSize=15,overflow} = props\n    return(\n        <SCopyBox \n        id={id}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        overflow={overflow}>\n            {children}\n        </SCopyBox>\n    )\n}\nconst SCopyBox = styled.div<{fontFamily:string,fontSize:number,overflow:Overflow}>`\n${InputAndCopyBoxStyle}\nposition:absolute;\noverflow:auto;\nfont-family:${props=>props.fontFamily};\nfont-size:${props=>props.fontSize.toString()}px;\nz-index:1;\noverflow:${props=>props.overflow};\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\nexport type Props = {\n    id?:string\n    color:string\n    children:string\n}\n\nexport const CopySpan:VFC<Props> =(props)=> {\n    const {color,children,id} = props\n    return(\n        <SCopySpan \n        id={id}\n        color={color}>\n            {children}&nbsp;\n        </SCopySpan>\n    )\n}\nconst SCopySpan = styled.span<{color:string}>`\ncolor:${props=>props.color};\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype Props ={\n    id?:string\n    fontFamily?:string\n    fontSize?:number\n    children?:string\n    color?:string\n}\nexport const TailSpan:VFC<Props> = (props)=>{\n    const {id,fontSize=15,fontFamily=\"'Tahoma'\",children=\"\",color} = props\n    return (\n        <STailSpan \n        id={id}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        color={color}\n        >\n        {children}\n        </STailSpan>\n\n    )\n}\nconst STailSpan = styled.span<{fontFamily:string,fontSize:number}>`\nfont-family:${props=>props.fontFamily};\nfont-size:${props=>props.fontSize.toString()}px;\n// margin:0px;\n\n`","import {Input} from \"../atoms/Input\"\nimport {CopyBox} from \"../atoms/CopyBox\"\nimport styled from \"styled-components\"\nimport {VFC} from \"react\"\nimport { CopySpan} from \"../atoms/CopySpan\"\nimport {StyledType} from \"../../types/styledTypes/styledType\"\nimport {TailSpan} from \"../atoms/TailSpan\"\nimport {useRecoilValue} from \"recoil\"\n\nexport type Props = {\n    fontFamily?:string\n    style?:StyledType\n    index:number\n    colorList:string[]\n    sentence:string\n    gridColumn?:string\n    gridRow?:string\n    handleKeyDown?:(e:React.KeyboardEvent<HTMLInputElement>)=>void\n    handleChange?:(e:React.ChangeEvent<HTMLInputElement>)=>void\n    onClick?:(e: React.MouseEvent<HTMLInputElement, MouseEvent>) => void\n    onScroll?:(event: React.UIEvent<HTMLInputElement, UIEvent>) => void\n}\n\nexport const InputAndCopy:VFC<Props> = (props) => {\n    const {style,index,colorList,sentence,handleChange,handleKeyDown,onScroll,onClick,\n    gridColumn,gridRow,fontFamily} = props\n    return(\n        <Contener \n        gridColumn={gridColumn}\n        gridRow={gridRow}\n        key={`inputContener${index}`}>\n            <Input\n                autoComplete=\"off\"\n                id={`input${index}`}\n                key={`input${index}`}\n                value={sentence}\n                handleKeyDown={handleKeyDown}\n                handleChange={handleChange}\n                onClick={onClick}\n                onScroll={onScroll}\n                style={style}\n                type=\"text\"/>\n            <CopyBox  key={`copyContener${index}`} overflow=\"auto\">\n            {sentence.split(\" \").map((phrase,pharaseIndex)=>(\n                    <CopySpan\n                        color={colorList[pharaseIndex]}\n                        key={`copySpan${phrase}${index}${pharaseIndex}`}>\n                        {phrase}\n                    </CopySpan>\n            ))}\n            <TailSpan id={`tailPosition${index}`}/>\n            </CopyBox>\n                \n        </Contener>\n    )\n}\nconst Contener = styled.div<{gridColumn:string | undefined,gridRow:string | undefined}>`\nwidth:100%;\nheight:100%;\nposition:relative;\ngrid-row:${props=>props.gridRow};\ngrid-column:${props=>props.gridColumn};\n`","import {VFC} from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n    id?:string\n    htmlFor:string\n    textContent:string\n    fontSize?:number\n    fontFamily?:string\n    width?:number\n    height?:number\n    position?:number\n    gridColumn?:string\n    gridRow?:string\n}\nexport const Label:VFC<Props> = (props)=>{\n    const {id, htmlFor, textContent,fontSize=15,fontFamily=\"\",\n            width=20,height=30,position,gridColumn,gridRow} = props\n    return(\n        <SBox\n        width={width}\n        height={height}\n        position={position}\n        gridColumn={gridColumn}\n        gridRow={gridRow}>\n        <SLabel\n        id={id}\n        htmlFor={htmlFor}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        >\n        {textContent}\n        </SLabel>\n        </SBox>\n    )   \n}\n\nconst SLabel = styled.label<{fontSize:number,fontFamily:string}>`\nfont-size:${props=>props.fontSize}px;\nfont-family:${props=>props.fontFamily};\n`\nconst SBox = styled.div<{width:number,height:number,position:number|undefined,gridColumn:string | undefined,gridRow:string | undefined}>`\nwidth:${props=>props.width}px;\nheight:${props=>props.height}px;\ndisplay:flex;\nbackground-color:white;\nz-index:7;\nalign-items:center;\ntransform:translateX(${props=>props.position}px);\ngrid-row:${props=>props.gridRow};\ngrid-column:${props=>props.gridColumn};\n`","import {InputAndCopy} from \"../molecules/InputAndCopy\"\nimport {VFC} from \"react\"\nimport styled from \"styled-components\"\nimport { Label } from \"components/atoms/Label\"\nimport {StyledType} from \"types/styledTypes/styledType\"\ntype Props = {\n    position?:number\n    style?:StyledType\n    index:number\n    colorList:string[]\n    sentence:string\n    handleKeyDown?:(e:React.KeyboardEvent<HTMLInputElement>)=>void\n    handleChange?:(e:React.ChangeEvent<HTMLInputElement>)=>void\n    onClick?:(e: React.MouseEvent<HTMLInputElement, MouseEvent>) => void\n    onScroll?:(event: React.UIEvent<HTMLInputElement, UIEvent>) => void\n}\n\nexport const InputAndCopyAndLabel:VFC<Props> = (props) =>{\n    const {index,colorList,sentence,handleChange,handleKeyDown,onScroll,onClick,style,position} = props\n    return (\n        <Contener>\n            <Label\n                position={position}\n                gridColumn=\"1/3\"\n                gridRow=\"1/2\"\n                textContent={`${index}:`}\n                htmlFor={`input${index}`}/>\n            <InputAndCopy\n                gridColumn=\"2/3\"\n                gridRow=\"1/2\"\n                handleKeyDown={handleKeyDown}\n                onScroll={onScroll}\n                onClick={onClick}\n                handleChange={handleChange}\n                sentence={sentence}\n                colorList={colorList}\n                index={index}\n                style={style}\n            />\n        </Contener>\n    )\n}\nconst Contener = styled.div`\nwidth:100%;//3000px;\nheight:30px;\n// overflow:auto;\ndisplay:grid;\ngrid-template-columns:20px 400px;//780px;change\ngrid-template-rows:40px;\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype Props = {\n    opacity?:number\n    color:string\n    id:string\n    handleClick:(e: React.MouseEvent<HTMLSpanElement, MouseEvent>)=>void\n    handleMouseDown:(e: React.MouseEvent<HTMLSpanElement>)=>void\n    children:string\n    backgroundColor?:string\n}\n\nexport const AutoCorrect:VFC<Props> =(props)=>{\n    const {id,opacity=1,color,handleClick,handleMouseDown,children,backgroundColor=\"black\"} = props\n    return (\n        <SAutoCorrect\n        id={id}\n        backgroundColor={backgroundColor}\n        opacity={opacity}\n        color={color}\n        onClick={handleClick}\n        onMouseEnter={handleMouseDown}\n        >\n            {children}\n        </SAutoCorrect>\n    )\n}\nconst SAutoCorrect = styled.span<{opacity:number,color:string,backgroundColor:string}>`\nopacity:${props=>props.opacity};\noverflow:scroll;\ncolor:${props=>props.color};\nbackground-color:${props=>props.backgroundColor};\nfont-family:'Tahoma';\n`","import styled from \"styled-components\"\nimport {VFC,useState} from \"react\"\n\ntype  Props = {\n    id?:string\n    posi:{\n        x:number\n        y:number\n    }\n    children:React.ReactNodeArray\n    autoCorrectNumber:number\n}\n\nexport const AutoCorrectBox:VFC<Props> = (props)=>{\n    const {id,posi,children,autoCorrectNumber} = props\n    return(\n        <SAutoCorrectBox id={id} posi={posi} height={autoCorrectNumber}>\n            {children}\n        </SAutoCorrectBox>\n    )\n}\n\ntype Posi = {\n    x:number\n    y:number\n}\nconst SAutoCorrectBox = styled.div<{posi:Posi,height:number}>`\n// width:100%;\nheight:${props=>props.height*20}px;\nborder:solid 1px black;\nwhite-space: pre-wrap;\nposition:absolute;\ntransform:translate(${props=>props.posi.x}px,${props=>props.posi.y}px);\noverflow: auto;\nbackground-color:black;\nz-index:6;\n`","import {VFC} from \"react\"\nimport {AutoCorrect} from \"../atoms/AutoCorrect\"\nimport {AutoCorrectBox} from \"../atoms/AutoCorrectBox\"\n\ntype Props = {\n    autoCorrects:string[]\n    position:{\n        x:number\n        y:number\n    }\n    handleMouseDown:(e:React.MouseEvent<HTMLSpanElement>)=>void\n    focusAutoCorrectsIndex:number\n    handleClick:(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\nexport const AutoCorrects:VFC<Props> = (props) =>{\n    const {autoCorrects, position,handleClick,\n        handleMouseDown,focusAutoCorrectsIndex,} = props\n    return(\n        <AutoCorrectBox id=\"AutoCorrectsBox\" posi={position} autoCorrectNumber={autoCorrects.length}>\n            {autoCorrects.map((value,i)=>(\n                <AutoCorrect\n                    backgroundColor={i===focusAutoCorrectsIndex ? \"white\" : \"black\"}\n                    opacity={i===focusAutoCorrectsIndex ? 1 : 1}\n                    color={i===focusAutoCorrectsIndex ? \"black\":\"white\"}\n                    id={`hover${i}`} \n                    handleClick={handleClick} \n                    handleMouseDown={handleMouseDown} \n                    key={`autoCorrect${i}`}>\n                        {value + \"\\n\"}\n                    </AutoCorrect>\n                ))}\n            </AutoCorrectBox>\n    )\n\n}","export type ccrd = {\n    [key:string]:RegExp[]\n}\nexport const ChangeColorRegDatas:ccrd={\"CREATE\":[/^c/i,/^c./i,/^c.e/i,/^c.ea/i,/^c.eat/i,/^c.eate/i],\n\"SELECT\":[/^s/i,/^s./i,/^s.l/i,/^s.le/i,/^s.lec/i,/^s.lect/i],\n\"UPDATE\":[/^u/i,/^u./i,/^u.d/i,/^u.da/i,/^u.dat/i,/^u.date/i],\n\"INSERT\":[/^i/i,/^i./i,/^i.s/i,/^i.se/i,/^i.ser/i,/^i.sert/i],\n\"DELETE\":[/^d/i,/^d./i,/^d.l/i,/^d.le/i,/^d.let/i,/^d.lete/i],\n\"COMMIT\":[/^c/i,/^c./i,/^c.m/i,/^c.mm/i,/^c.mmi/i,/^c.mmit/i],\n\"ROLLBACK\":[/^r/i,/^r./i,/^r.l/i,/^r.ll/i,/^r.llb/i,/^r.llba/i,/^r.llbac/i,/^r.llback/i],\n\"FROM\":[/^f/i,/^f./i,/^f.o/i,/^f.om/i],\n\"GROUP BY\":[/^g/i,/^g./i,/^g.o/i,/^g.ou/i,/^g.oup/i,/^g.oup /i,/^g.oup b/i,/^g.oup by/i],\n\"ORDER BY\":[/^o/i,/^o./i,/^o.d/i,/^o.de/i,/^o.der/i,/^o.der /i,/^o.der b/i,/^o.der by/i],\n\"DESC\":[/^d/i,/^d./i,/^d.s/i,/^d.sc/i],\n\"ASC\":[/^a/i,/^a./i,/^a.c/i],\n\"PRIMARY KEY\":[/^p/i,/^p./i,/^p.i/i,/^p.im/i,/^p.ima/i,/^p.imar/i,/^p.imary/i,/^p.imary /i,/^p.imary k/i,/^p.imary ke/i,/^p.imary key/i],\n\"TABLE\":[/^t/i,/^t./i,/^t.b/i,/^t.bl/i,/^t.ble/i],\n\"VARCHAR\":[/^v/i,/^v./i,/^v.r/i,/^v.rc/i,/^v.rch/i,/^v.rcha/i,/^v.rchar/i],\n\"INT\":[/^i/i,/^i./i,/^i.t/i],\n\"TIMESTAMP\":[/^t/i,/^t./i,/^t.m/i,/^t.me/i,/^t.mes/i,/^t.mest/i,/^t.mesta/i,/^t.mestam/i,/^t.mestamp/i],\n\"CASE\":[/^c/i,/^c./i,/^c.s/i,/^c.se/i],\n\"WHERE\":[/^w/i,/^w./i,/^w.e/i,/^w.er/i,/^w.ere/i],\n\"AUTO INCRIMENT\":[/^a/i,/^a./i,/^a.t/i,/^a.to/i,/^a.to /i,/^a.to i/i,/^a.to in/i,/^a.to inc/i,/^a.to incr/i,/^a.to incri/i,/^a.to incrim/i,/^a.to incrime/i,/^a.to incrimen/i,/^a.to incriment/i],\n\"DISTINCT\":[/^d/i,/^d./i,/^d.s/i,/^d.st/i,/^d.sti/i,/^d.stin/i,/^d.stinc/i,/^d.stinct/i],\n\"IN\":[/^i/i,/^i./i],\n\"LIKE\":[/^l/i,/^l./i,/^l.k/i,/^l.ke/i],\n\"AS\":[/^a/i,/^a./i],\n\"AND\":[/^a/i,/^a./i,/^a.d/i],\n\"OR\":[/^o/i,/^o./i],\n\"JOIN\":[/^j/i,/^j./i,/^j.i/i,/^j.in/i],\n\"INNER JOIN\":[/^i/i,/^i./i,/^i.n/i,/^i.ne/i,/^i.ner/i,/^i.ner /i,/^i.ner j/i,/^i.ner jo/i,/^i.ner joi/i,/^i.ner join/i],\n\"LEFT OUTER JOIN\":[/^l/i,/^l./i,/^l.f/i,/^l.ft/i,/^l.ft /i,/^l.ft o/i,/^l.ft ou/i,/^l.ft out/i,/^l.ft oute/i,/^l.ft outer/i,/^l.ft outer /i,/^l.ft outer j/i,/^l.ft outer jo/i,/^l.ft outer joi/i,/^l.ft outer join/i],\n\"RIGHT OUTER JOIN\":[/^r/i,/^r./i,/^r.g/i,/^r.gh/i,/^r.ght/i,/^r.ght /i,/^r.ght o/i,/^r.ght ou/i,/^r.ght out/i,/^r.ght oute/i,/^r.ght outer/i,/^r.ght outer /i,/^r.ght outer j/i,/^r.ght outer jo/i,/^r.ght outer joi/i,/^r.ght outer join/i],\n\"FULL OUTER JOIN\":[/^f/i,/^f./i,/^f.l/i,/^f.ll/i,/^f.ll /i,/^f.ll o/i,/^f.ll ou/i,/^f.ll out/i,/^f.ll oute/i,/^f.ll outer/i,/^f.ll outer /i,/^f.ll outer j/i,/^f.ll outer jo/i,/^f.ll outer joi/i,/^f.ll outer join/i],\n\"CROSS JOIN\":[/^c/i,/^c./i,/^c.o/i,/^c.os/i,/^c.oss/i,/^c.oss /i,/^c.oss j/i,/^c.oss jo/i,/^c.oss joi/i,/^c.oss join/i],\n\"SUM\":[/^s/i,/^s./i,/^s.m/i],\n\"AVG\":[/^a/i,/^a./i,/^a.g/i],\n\"MAX\":[/^m/i,/^m./i,/^m.x/i],\n\"MIN\":[/^m/i,/^m./i,/^m.n/i],\n\"HAVING\":[/^h/i,/^h./i,/^h.v/i,/^h.vi/i,/^h.vin/i,/^h.ving/i],\n\"LIMIT\":[/^l/i,/^l./i,/^l.m/i,/^l.mi/i,/^l.mit/i],\n\"ANY\":[/^a/i,/^a./i,/^a.y/i],\n\"EXISTS\":[/^e/i,/^e./i,/^e.i/i,/^e.is/i,/^e.ist/i,/^e.ists/i],\n\"ALL\":[/^a/i,/^a./i,/^a.l/i],\n\"BETWEEN\":[/^b/i,/^b./i,/^b.t/i,/^b.tw/i,/^b.twe/i,/^b.twee/i,/^b.tween/i],\n\"OUTER\":[/^o/i,/^o./i,/^o.t/i,/^o.te/i,/^o.ter/i],\n\"FULL\":[/^f/i,/^f./i,/^f.l/i,/^f.ll/i],\n\"RIGHT\":[/^r/i,/^r./i,/^r.g/i,/^r.gh/i,/^r.ght/i],\n\"INCRIMENT\":[/^i/i,/^i./i,/^i.c/i,/^i.cr/i,/^i.cri/i,/^i.crim/i,/^i.crime/i,/^i.crimen/i,/^i.criment/i],\n\"AUTO\":[/^a/i,/^a./i,/^a.t/i,/^a.to/i],\n\"CROSS\":[/^c/i,/^c./i,/^c.o/i,/^c.os/i,/^c.oss/i],\n\"PRIMARY\":[/^p/i,/^p./i,/^p.i/i,/^p.im/i,/^p.ima/i,/^p.imar/i,/^p.imary/i],\n\"KEY\":[/^k/i,/^k./i,/^k.y/i],\n\"INNER\":[/^i/i,/^i./i,/^i.n/i,/^i.ne/i,/^i.ner/i],\n\"GROUP\":[/^g/i,/^g./i,/^g.o/i,/^g.ou/i,/^g.oup/i],\n\"ORDER\":[/^o/i,/^o./i,/^o.d/i,/^o.de/i,/^o.der/i],\n\"BY\":[/^b/i,/^b./i],\n\"INTO\":[/^i/i,/^i./i,/^i.t/i,/^i.to/i],\n\"VALUES\":[/^v/i,/^v./i,/^v.l/i,/^v.lu/i,/^v.lue/i,/^v.lues/i],\n}","import {atom} from \"recoil\"\n\nexport const colorListState = atom<string[][]>({\n    key:\"colorListState\",\n    default: [[\"\"]]\n})","import {ChangeColorRegDatas} from \"../datas/Datas\"\nimport {useRecoilState} from \"recoil\"\nimport { colorListState } from \"store/colorList\"\n\nexport const useColorList = () => {\n    const [colorList,setColorList] = useRecoilState(colorListState)\n    const addRowColorList = () => {\n        setColorList([...colorList,[]])\n    }\n    const removeRowColorList = () => {\n        setColorList(removeLastList(colorList))\n    }\n    const updateColorList = (wordList:string[],index:number) => {\n        let clones:string[][] = []\n        colorList.map((color)=>{\n            clones = [...clones,[...color]]\n        })\n        wordList.map((word,wordIndex)=>{\n            clones[index][wordIndex] = whatWordColor(word)\n        })\n        setColorList([...clones])\n    }\n\n    return {colorList, addRowColorList, removeRowColorList, updateColorList ,setColorList}\n}\n\nexport const whatWordColor = (word:string):string => {\n    if(word.length === 0){\n        return \"black\"\n    }\n    for (let key in ChangeColorRegDatas){\n        if(!isExistRegData(word,key)){\n            continue\n        }\n        if(isWordMatch(key,word)){\n            return \"red\"\n        }\n    }\n    return \"black\"\n}\n\nconst isExistRegData = (word:string,key:string):boolean => {\n    const index = word.length - 1\n    if(ChangeColorRegDatas[key][index]===undefined){\n        return false\n    }\n    return true\n}\n\nconst isWordMatch = (key:string,word:string) => {\n    return key === word || key.toLocaleLowerCase() === word\n}\nconst removeLastList = (list:string[][]) => {\n    return list.filter((_:string[],i:number)=>i!==list.length-1)\n}","import {atom} from \"recoil\"\n\nexport const focusRowIndexState = atom<number>({\n    key:\"focusRowIndexState\",\n    default: 0\n})","import {atom} from \"recoil\"\n\nexport const sentencesState = atom<string[]>({\n    key:\"sentencesState\",\n    default: [\"\"]\n})","import { useColorList } from \"./useColorList\"\nimport {useFocusRowIndex} from \"./useFocusRowIndex\"\nimport { sentencesState } from \"store/sentences\";\nimport {useRecoilState,useRecoilValue} from \"recoil\"\nimport { focusRowIndexState } from \"store/focusRowIndex\";\nimport { colorListState } from \"store/colorList\";\n\n\n\nexport const useEditer = () =>{\n    const [colorList,setColorList] = useRecoilState(colorListState)\n    const removeLastValue = (list:string[]) => {\n        return list.filter((_:string,i:number)=>i!==list.length-1)\n    }\n    const [sentences,setSentences] = useRecoilState(sentencesState)\n    const addRowSentence = () => {\n        setSentences([...sentences,\"\"])\n    }\n    const removeRowSentence = () => {\n        setSentences(removeLastValue(sentences))\n    }\n    const updateSentences = (newCharacter:string,index:number) => {\n        let clone = sentences.slice() \n        clone[index] = newCharacter\n        setSentences([...clone])\n    }     \n    const { \n            addRowColorList, \n            removeRowColorList,\n            updateColorList\n        } = useColorList()\n    const { \n            focusElement,\n            moveFocusToClickedElement,\n            incrementFocusRowIndex,\n            decrementFocusRowIndex\n        } = useFocusRowIndex()\n        const focusRowIndex = useRecoilValue(focusRowIndexState)\n    const addInitRowDatas = () => {\n        addRowSentence()\n        addRowColorList()\n    }\n    const removeRowDatas = () => {\n        removeRowSentence()\n        removeRowColorList()\n    }\n    const isFocusRowSentencesNull = ():boolean =>{\n        return sentences[focusRowIndex] === \"\" \n    }\n    const isFocusRowIndexInit = ():boolean => {\n        return focusRowIndex === 0\n    }\n    const isFocusRowIndexEnd = ():boolean => {\n        return focusRowIndex === sentences.length-1\n    }\n\n    return {sentences, colorList, focusRowIndex,\n            updateSentences, updateColorList, setColorList,\n            addInitRowDatas, removeRowDatas,\n            focusElement, moveFocusToClickedElement,\n            incrementFocusRowIndex, decrementFocusRowIndex,\n            isFocusRowSentencesNull, isFocusRowIndexInit, isFocusRowIndexEnd}\n}\n\n","import {useRecoilState} from \"recoil\"\nimport { focusRowIndexState } from \"store/focusRowIndex\"\nexport const useFocusRowIndex = () => {\n    const [focusRowIndex,setFocusIndex] = useRecoilState(focusRowIndexState)\n    const focusElement =(id:string):void=>{\n        const focusElement = document.getElementById(id)\n        if(focusElement){\n            focusElement.focus()\n        }else{\n            console.log(\"not found\")\n        }\n    }\n    const moveFocusToClickedElement =((e: React.MouseEvent<HTMLInputElement, MouseEvent>,focusIdPrefix=\"input\")=>{\n        focusElement(e.currentTarget.id)\n        setFocusIndex(Number(e.currentTarget.id.replace(focusIdPrefix,\"\")))\n    })\n    const incrementFocusRowIndex = () => {\n        setFocusIndex(focusRowIndex + 1)\n    }\n    const decrementFocusRowIndex = () => {\n        setFocusIndex(focusRowIndex - 1)\n    }\n    return {focusRowIndex,focusElement,moveFocusToClickedElement,incrementFocusRowIndex,decrementFocusRowIndex}\n}","import {useState} from \"react\"\nimport {ChangeColorRegDatas} from \"../datas/Datas\"\n\nexport const useAutoCorrects = () => {\n    const [autoCorrects, setAutoCorrect] = useState<string[]>([])\n    const findAutoCorrect = (word:string) => {\n        let matchAutoCorrects:string[] = []\n        const wordLength = word.length - 1\n        for (let key in ChangeColorRegDatas){\n            if(ChangeColorRegDatas[key][wordLength]===undefined){\n                continue\n            }\n            const pattern:RegExp = ChangeColorRegDatas[key][wordLength]\n            if(pattern.test(word)){\n                matchAutoCorrects = [...matchAutoCorrects,key]\n            }\n        }\n        return matchAutoCorrects\n    }\n\n    const sortAutoCorrect = (word:string) => {\n        const matchAutoCorrects = findAutoCorrect(word)\n        if(matchAutoCorrects.length !== 0){\n            let primaryList:string[] = []\n            let noPrimaryList:string[] = []\n            const reg = new RegExp(word.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"i\")\n            matchAutoCorrects.map((key:string)=>{\n                if(reg.test(key)){\n                    primaryList = [...primaryList,key]\n                }else{\n                    noPrimaryList = [...noPrimaryList,key]\n                }\n            })\n            setAutoCorrect(([...primaryList,...noPrimaryList]))\n            return true             \n        }\n        return false\n    }\n    return {autoCorrects, sortAutoCorrect}\n}\n    \n        \n","import {useAutoCorrects} from \"./useAutoCorrects\"\nimport {useFocusAutoCorrectIndex} from \"./useFocusAutoCorrectIndex\"\nimport {useIsDisplayAutoCorrects} from \"./useIsDisplayAutoCorrects\"\nimport {useAutoCorrectsPosition} from \"./useAutoCorrectsPosition\"\n\n\nexport const useAutoCorrecters = () =>{\n    const {isDisplayAutoCorrects, notDisplayAutoCorrects,setIsDisplayAutoCorrects} = useIsDisplayAutoCorrects()\n    const { focusAutoCorrectsIndex, initFocusAutoCorrectsIndex, \n        incrementFocusAutoCorrectsIndex, decrementFocusAutoCorrectsIndex,\n        handleMouseDownToSelectAutoCorrect} = useFocusAutoCorrectIndex()\n    const {autoCorrects,sortAutoCorrect} = useAutoCorrects()\n    const {autoCorrectsPosition, getAndSetAutoCorrectsPosition} = useAutoCorrectsPosition()\n    const initAutoCorrects = () => {\n        notDisplayAutoCorrects()\n        initFocusAutoCorrectsIndex()\n    }\n\n    \n\n    return {initAutoCorrects, sortAutoCorrect, handleMouseDownToSelectAutoCorrect,setIsDisplayAutoCorrects,\n            getAndSetAutoCorrectsPosition, autoCorrectsPosition, focusAutoCorrectsIndex,\n            autoCorrects, isDisplayAutoCorrects, incrementFocusAutoCorrectsIndex,decrementFocusAutoCorrectsIndex}\n}","import {useState} from \"react\"\n\nexport const useIsDisplayAutoCorrects = () => {\n    const [isDisplayAutoCorrects, setIsDisplayAutoCorrects] = useState(false)\n    const notDisplayAutoCorrects = ()=>{setIsDisplayAutoCorrects(false)}\n    const displayAutoCorrects = () =>{setIsDisplayAutoCorrects(true)}\n    return { isDisplayAutoCorrects, notDisplayAutoCorrects, displayAutoCorrects,setIsDisplayAutoCorrects }\n}","import {useState} from \"react\"\n\nexport const useFocusAutoCorrectIndex = () => {\n    const [focusAutoCorrectsIndex,setFocusAutoCorrectsIndex] = useState(0)\n    const initFocusAutoCorrectsIndex = ()=>{setFocusAutoCorrectsIndex(0)}\n    const handleMouseDownToSelectAutoCorrect = (e:React.MouseEvent<HTMLSpanElement>,id=\"hover\")=>{\n        const hoverId = e.currentTarget.id    \n        setFocusAutoCorrectsIndex(parseInt(hoverId.replace(id,\"\")))\n    }\n    const incrementFocusAutoCorrectsIndex = ()=>{setFocusAutoCorrectsIndex(focusAutoCorrectsIndex + 1)}\n    const decrementFocusAutoCorrectsIndex = ()=>{setFocusAutoCorrectsIndex(focusAutoCorrectsIndex - 1)}\n    return { focusAutoCorrectsIndex, initFocusAutoCorrectsIndex, \n            incrementFocusAutoCorrectsIndex, decrementFocusAutoCorrectsIndex,\n            handleMouseDownToSelectAutoCorrect}\n}","import {useState} from \"react\"\n\n\nexport const useAutoCorrectsPosition = () => {\n    const [autoCorrectsPosition,setAutoCorrectsPosition] = useState({x:0,y:0})\n    const getAutoCorrectsPosition = (focusRowIndex:number,prefixId=\"tailPosition\") => {\n        const tail = document.getElementById(`${prefixId}${focusRowIndex}`)\n        const ajustTop = 180\n        const ajustleft = 30\n        let x = 0\n        let y = 0\n        if(tail){\n            x = window.pageXOffset + (tail.getBoundingClientRect().left) -ajustleft\n            y = window.pageYOffset + (tail.getBoundingClientRect().top) - ajustTop\n        }\n        \n        return {x,y}\n    }\n    const getAndSetAutoCorrectsPosition = (focusRowIndex:number,prefixId=\"tailPosition\") => {\n        const {x,y} = getAutoCorrectsPosition(focusRowIndex,prefixId)\n        setAutoCorrectsPosition({x:x,y:y})\n    }\n    return {autoCorrectsPosition, getAndSetAutoCorrectsPosition}\n}","\nexport const wordDivide = (newCharacter:string) => {\n    return newCharacter.split(\" \")\n}\n\nexport const removeLastValue = (list:string[]) => {\n    return list.filter((_:string,i:number)=>i!==list.length-1)\n}\nexport const removeLastChar = (sentence:string) => {\n    return sentence.substr(0,sentence.length-1)\n}\nexport const deleteLastWord = (sentence:string) => {\n    const words = wordDivide(sentence)\n    return removeLastValue(words).join(\" \")\n}","import {useEffect,useState} from \"react\"\nimport {InputAndCopyAndLabel} from \"./InputAndCopyAndLabel\"\nimport {AutoCorrects} from \"../molecules/AutoCorrects\"\nimport styled from \"styled-components\" \nimport { useEditer } from \"hocks/useEditer\"\nimport {useAutoCorrecters} from \"hocks/useAutoCorrecters\"\nimport {wordDivide, deleteLastWord} from \"functions/editerFucntions\"\nimport { sentencesState } from \"store/sentences\";\nimport {useRecoilState,useRecoilValue} from \"recoil\"\nimport { focusRowIndexState } from \"store/focusRowIndex\"\nimport { colorListState } from \"store/colorList\"\n\n\nexport const EditerAndAutoCorrects = ()=>{\n    const sentences = useRecoilValue(sentencesState)\n    const colorList = useRecoilValue(colorListState)\n    const focusRowIndex = useRecoilValue(focusRowIndexState)\n    const { updateColorList,\n        addInitRowDatas, removeRowDatas,updateSentences,\n        focusElement, moveFocusToClickedElement,\n        incrementFocusRowIndex, decrementFocusRowIndex,\n        isFocusRowSentencesNull, isFocusRowIndexInit, isFocusRowIndexEnd} = useEditer()\n    const {initAutoCorrects, sortAutoCorrect, handleMouseDownToSelectAutoCorrect,\n        getAndSetAutoCorrectsPosition, autoCorrectsPosition, focusAutoCorrectsIndex,setIsDisplayAutoCorrects,\n        autoCorrects, isDisplayAutoCorrects, incrementFocusAutoCorrectsIndex,decrementFocusAutoCorrectsIndex} = useAutoCorrecters()\n    const [labelPosition, setLabelPosition] = useState(0)\n    const [rowPosition,setRowPosition] = useState<number[]>([])\n    const editerContenerHeight = 600\n    const rowHeight = 30\n\n    const didEnterNewCharacters = (newSenetence:string)=>{\n        initAutoCorrects()\n        updateSentences(newSenetence,focusRowIndex)\n        const wordList = wordDivide(newSenetence)\n        updateColorList(wordList,focusRowIndex)\n    }\n\n    const handleChanges = (e:React.ChangeEvent<HTMLInputElement>)=>{\n        didEnterNewCharacters(e.target.value)\n        const wordList = wordDivide(e.target.value)\n        const lastWord = wordList[wordList.length - 1]\n        setIsDisplayAutoCorrects(sortAutoCorrect(lastWord))\n     }\n\n    const didSelectAutoCorrect = (e:React.MouseEvent<HTMLSpanElement, MouseEvent>)=>{\n        if(e.currentTarget.textContent !== null){\n            const changeStr = e.currentTarget.textContent.replace(\"\\n\",\"\")\n            const currentStrList = sentences[focusRowIndex].split(\" \")\n            const removeMatchChar = currentStrList[currentStrList.length-1]\n            didEnterNewCharacters(sentences[focusRowIndex].slice(0,(sentences[focusRowIndex].length - removeMatchChar.length)) + changeStr)\n        }\n    }\n    \n    const CaseDisplayAutoCorrectsHandleKeyDown:{[key:string]:()=>void} = {\n        \"Enter\":()=> {\n            const selectedAutoCorrect = autoCorrects[focusAutoCorrectsIndex]\n            const beforeInsertAutoCorrect = deleteLastWord(sentences[focusRowIndex])\n            const newSentences = `${beforeInsertAutoCorrect} ${selectedAutoCorrect}`\n            didEnterNewCharacters(newSentences)\n            initAutoCorrects()\n        },\n        \"ArrowUp\":()=> {\n            if(focusAutoCorrectsIndex > 0){\n                decrementFocusAutoCorrectsIndex()\n            }\n        },\n        \"ArrowDown\":()=> {\n            if(focusAutoCorrectsIndex < autoCorrects.length -1){\n                incrementFocusAutoCorrectsIndex()\n            }\n        },\n        \"ArrowRight\":() => {\n            initAutoCorrects()\n        },\n        \"ArrowLeft\":() => {\n            initAutoCorrects()\n        },\n    }\n\n    const CaseNotDisplayAutoCorrectsHandleKeyDown:{[key:string]:()=>void} = {\n        \"Enter\":()=>{\n            incrementFocusRowIndex()\n            if(isFocusRowIndexEnd()){\n                addInitRowDatas()\n            }\n        },\n        \"ArrowUp\":()=>{\n            if(!isFocusRowIndexInit()){\n                decrementFocusRowIndex()\n            }\n        },\n        \"ArrowDown\":()=>{\n            if(!isFocusRowIndexEnd()){\n                incrementFocusRowIndex()\n            }\n        },\n        \"Backspace\":()=>{\n            if(isFocusRowSentencesNull() && !isFocusRowIndexInit()){\n                if(isFocusRowIndexEnd()){\n                    removeRowDatas()\n                }\n                decrementFocusRowIndex()\n            }\n        }\n    }\n\n    const handleAnyKeyOnInput = (e:React.KeyboardEvent<HTMLInputElement>)=>{\n        try{\n            if(isDisplayAutoCorrects){\n                CaseDisplayAutoCorrectsHandleKeyDown[e.key]()\n            }else{\n                CaseNotDisplayAutoCorrectsHandleKeyDown[e.key]()\n            }\n        }catch(e){\n        }\n    }\n            \n\n    useEffect(()=>{\n        getAndSetAutoCorrectsPosition(focusRowIndex)\n    },[sentences])\n    \n    useEffect(()=>{\n        if(focusRowIndex<=rowPosition.length-1){\n            return \n        }\n        const scroll = document.getElementById(\"contener\")\n        const input = document.getElementById(`input${focusRowIndex}`)\n        let cloneRowPosition = rowPosition\n        if(input && scroll){\n            if(editerContenerHeight>input.getBoundingClientRect().top){\n                cloneRowPosition.push(input.getBoundingClientRect().top)\n            }else{\n                cloneRowPosition.push(scroll.scrollHeight - rowHeight)\n            }\n            setRowPosition(cloneRowPosition)\n        }\n    },[sentences.length])\n\n    useEffect(()=>{\n        focusElement(\"input\"+focusRowIndex.toString())\n        const scroll = document.getElementById(\"contener\")\n        const input = document.getElementById(`input${focusRowIndex}`)\n        if(scroll && input){\n            let disty = rowPosition[focusRowIndex]\n            scroll.scroll(-2000,disty)\n        }\n    },[focusRowIndex])\n\n    return (\n        <Contener \n        height={editerContenerHeight}\n        id=\"contener\"\n        onScroll={(e)=>setLabelPosition(e.currentTarget.scrollLeft)}>\n            {isDisplayAutoCorrects ? (\n                <AutoCorrects\n                handleMouseDown={handleMouseDownToSelectAutoCorrect}\n                focusAutoCorrectsIndex={focusAutoCorrectsIndex}\n                handleClick={didSelectAutoCorrect}\n                position={autoCorrectsPosition}\n                autoCorrects={autoCorrects}\n                />\n            ):(\n                null\n            )}\n            {sentences.map((sentence,rowIndex)=>(\n                <InputAndCopyAndLabel\n                handleChange={handleChanges}\n                position={labelPosition}\n                style={{fontFamily:\"'Tahoma'\"}}\n                handleKeyDown={handleAnyKeyOnInput}\n                onClick={moveFocusToClickedElement}\n                sentence={sentence}\n                colorList={colorList[rowIndex]}\n                index={rowIndex}/>\n            ))}\n        </Contener>\n    )\n}\nconst Contener = styled.div<{height:number}>`\nwidth:420px;\nheight:350px;\noverflow:auto;\nborder:solid #e7e7eb 1px;\n`\n","import styled from \"styled-components\"\nimport {VFC} from \"react\"\nimport {StyledType} from \"../../types/styledTypes/styledType\"\nimport {returnStyle} from \"../../functions/returnStyle\"\ntype Props = {\n    style?:StyledType\n    src:string\n}\n\nexport const Image:VFC<Props> = (props) => {\n    const {style,src} = props\n    let styles:string | undefined \n    if(style){\n        styles = returnStyle(style!)\n    }\n    return(\n        <SImage\n        src={src}\n        styles={styles}></SImage>\n    )\n}\n\n\nconst SImage = styled.img<{styles:string | undefined}>`\nwidth:60px;\nheight:50px;\nposition:absolute;\ntop:0px;\nleft:0px;\n${props=>props.styles}\n\n`","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport {Image} from \"../atoms/Image\"\nimport {StyledType} from \"../../types/styledTypes/styledType\"\nimport {VFC} from \"react\"\nimport { returnStyle } from \"functions/returnStyle\"\n\ntype Props = {\n    src:string\n    hoverWord?:string\n    imageStyle?:StyledType\n    contenerStyle?:StyledType\n    children?:JSX.Element\n    onClick?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\n}\n\nexport const ImageToButton:VFC<Props> = (props) =>{\n    const {src,imageStyle,contenerStyle,children,onClick,hoverWord=\"ファイル読取り\"} = props\n    const [isMouseEnter,setIsMouseEnter] = useState(false)\n    let contenerStyles:string | undefined\n    contenerStyles = returnStyle(contenerStyle)\n    return (\n        <>\n        <Contener\n            onClick={onClick}\n            styles={contenerStyles}\n            onMouseLeave={(_)=>setIsMouseEnter(false)}\n            onMouseEnter={(_)=>setIsMouseEnter(true)}>\n            <Image\n            src={src}\n            style={imageStyle}\n            ></Image>\n            {children}\n        </Contener>\n        {isMouseEnter ? (\n            <HoverText>\n                {hoverWord}\n            </HoverText>\n        ):(\n            null\n        )}\n        </>\n    )\n}\n\nconst HoverText = styled.div`\nmargin-top:10px;\nfont-size:5px;\ntext-align:center;\n`\n\nconst Contener = styled.div<{styles:string | undefined}>`\nwidth:70px;\nheight:40px;\nposition:relative;\nbackground-color:transparent;\n:hover{\n    opacity:0.7;\n    background-color:white;\n}\n${props=>props.styles}\n`\nconst Label = styled.label`\nwidth:100%;\nheight:100%;\nz-index:2;\nposition:absolute;\ntop:0px;\nleft:0px;\n`","import styled from \"styled-components\"\nimport { wordDivide } from \"functions/editerFucntions\"\nimport { whatWordColor } from \"hocks/useColorList\"\nimport { useSetRecoilState} from \"recoil\"\nimport {colorListState} from \"store/colorList\"\nimport { sentencesState } from \"store/sentences\"\n\n\nexport const ReadFile = () => {\n    const setColorList = useSetRecoilState(colorListState)\n    const setSentences = useSetRecoilState(sentencesState)\n    const newColorList = (newSenetences:string[]) => {\n        let clone:string[][] = []\n        newSenetences.map((sentence)=>{\n            const wordList = wordDivide(sentence)\n            let tempList:string[] = []\n            wordList.map((word)=>{\n                \n                tempList = [...tempList,whatWordColor(word)]//isueu\n            })\n            clone = [...clone,tempList]\n        })\n        setColorList(clone)\n    }\n    const handleChange = (e:React.ChangeEvent<HTMLInputElement>)=>{\n        const input = document.getElementById(\"readfile\")\n        if(input){\n            const reader = new FileReader()\n            const file = e.target\n            reader.addEventListener(\"load\",()=>{\n                if(typeof reader.result === \"string\"){\n                    const newSentences = reader.result!.split(\"\\n\")\n                    newSentences.filter((sentence)=>sentence!==\"\")\n                    newColorList(newSentences.filter((sentence)=>sentence!==\"\"))\n                    setSentences(newSentences.filter((sentence)=>sentence!==\"\"))\n                }else{\n                    console.log(\"notstring\")\n                }\n            })\n            if(file.files){\n                try{\n                    reader.readAsText(file.files[0],\"UTF-8\")\n                }catch(e){\n                    console.log(e)\n                }\n            }\n        }\n    }\n\n    return (\n        <SInput\n        id=\"readfile\"\n        type=\"file\"\n        onChange={handleChange}\n        ></SInput>\n    )\n   \n}\nconst SInput = styled.input`\nvisibility:hidden;\ntop:0px;\nleft:0px;\nwidth:150px;\nheight:50px;\nbackground-color:red;\nz-index:2;\nposition:absolute;\n`","import styled from \"styled-components\"\nimport {ReadFile} from \"../atoms/ReadFile\"\n\n\n\nexport const LabelAndFileReader = () =>{\n    return(\n        <>\n        <Label>\n            <ReadFile></ReadFile>\n        </Label>\n        </>\n    )\n}\n\nconst Label = styled.label`\nwidth:100%;\nheight:70px;\nz-index:2;\nposition:absolute;\ntop:0px;\nleft:0px;\n`","import {ImageToButton} from \"../molecules/ImageToButton\"\nimport { LabelAndFileReader } from \"components/molecules/LabelAndFileReader\";\nimport {VFC} from \"react\"\nimport { colorListState } from \"store/colorList\";\nimport {useRecoilState} from \"recoil\"\n\n\nexport const FileReaderOnIcon = () =>{\n    return (\n        <ImageToButton\n            src={\"../../../image/folder-blue-documents-icon.png\"}>\n                <LabelAndFileReader\n                    />\n        </ImageToButton>\n    )\n}\n","import {ImageToButton} from \"../molecules/ImageToButton\"\nimport {VFC} from \"react\"\n\ntype Props = {\n    fileName:string\n    text:string\n}\n\nexport const SaveFileOnIcon:VFC<Props> = (props) => {\n    const {text,fileName} = props\n    const downloadFile = () =>{\n        const confirmSave = true//confirm(\"保存しますか？\")\n        if(confirmSave){\n            const blob = new Blob([text],{type:\"text/plain\"})\n            const url = URL.createObjectURL(blob)\n            const a = document.createElement(\"a\")\n            a.download = `${fileName}.sql`\n            a.href = url\n            a.click()\n            a.remove()\n            URL.revokeObjectURL(url)\n        }\n    }\n    return(\n        <ImageToButton\n            hoverWord={\"ファイルに保存\"}\n            src=\"../../../image/folder-blue-download-icon.png\"\n            onClick={downloadFile}/>\n    )\n}\n\n","import {EditerAndAutoCorrects} from \"./EditerAndAutoCorrects\"\nimport {FileReaderOnIcon} from \"../molecules/FileReaderOnIcon\"\nimport {SaveFileOnIcon} from \"../molecules/SaveFileOnIcon\"\nimport styled from \"styled-components\"\nimport {useState} from \"react\"\nimport {BasicTextFields} from \"../atoms/TextFiled_MaterialUI\"\nimport { sentencesState } from \"store/sentences\";\nimport {useRecoilValue} from \"recoil\"\n\n\nexport const FolderAndEditer = () =>{\n    const sentences = useRecoilValue(sentencesState)\n    const [fileName,setFileName] = useState(\"\")\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFileName(e.target.value)\n    }\n    \n    return (\n        <Contener>\n            <FolderContener\n            start={2}\n            end={3}\n            children={\n                <FileReaderOnIcon/>\n            }\n                />\n            <FolderContener\n            start={3}\n            end={4}\n            children={\n                <SaveFileOnIcon\n                text={sentences.join(\"\\n\")}\n                fileName={fileName}/>}/>\n            <InputContener>\n            <BasicTextFields\n            label=\"File name\"\n            handleChange={handleChange}\n            value={fileName}\n            />\n            </InputContener>\n            <EditerContener>\n                <EditerAndAutoCorrects/>\n            </EditerContener>\n        </Contener>\n    )\n}\nconst Contener = styled.div`\ndisplay:grid;\ngrid-template-rows:60px 70px 1fr;\ngrid-template-columns:10px 70px 70px  280px;\n`\nconst EditerContener = styled.div`\ngrid-row:3/4;\ngrid-column:1/5;\n`\nconst FolderContener = styled.div<{start:number,end:number}>`\ngrid-row:1/2;\ngrid-column:${props=>props.start}/${props=>props.end};\n`\nconst InputContener = styled.div`\ngrid-row:2/3;\ngrid-column:1/2;\n`\n","import {FolderAndEditer} from \"../organisms/FolderAndEditer\"\nimport { ContainedButtons } from \"../atoms/Bottun_MatirialUI\"\nimport styled from \"styled-components\"\nimport { VFC } from \"react\"\nimport { sentencesState } from \"store/sentences\";\nimport {useRecoilState} from \"recoil\"\n\n\ntype Props = {\n    onClick: () => void\n}\n\n\nexport const EditersAndButton:VFC<Props> = (props) => {\n    const {onClick} = props \n    return ( \n    <Contener>\n    <ButtonContener>\n    <ContainedButtons\n        value=\"Execute\"\n        color=\"secondary\"\n        onClick={()=>onClick()}\n        />\n    </ButtonContener>\n    <EditersContener>\n        <FolderAndEditer/>\n    </EditersContener>\n    </Contener>\n    )\n}\n\n\nconst Contener  = styled.div`\ndisplay:grid;\ngrid-template-rows:120px 70px 250px 1fr;\ngrid-template-columns:10px 120px 300px  1fr;\n`\nconst ButtonContener = styled.div`\ngrid-row:4/5;\ngrid-column:4/5;\n`\nconst EditersContener = styled.div`\ngrid-row:1/5;\ngrid-column:1/5;\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype makeElement = (value:string|null,rowIndex:number,columnIndex:number,column:string)=>JSX.Element\n\ntype Props = {\n    columns:string[]\n    rows:{[key:string]:string|null}[]\n    tableKey:string\n    headerKey:string\n    bodyKey:string\n    cellElements?:makeElement\n}\nexport const Table:VFC<Props> = (props)=>{\n    const {columns,rows,headerKey,bodyKey,tableKey,cellElements} = props\n    return(\n        <STable key={`Table${tableKey}`}>\n            <STHeader key={`${headerKey}THeader`}>\n                <STr key={`tr${headerKey}THeader`}>\n                    {columns.map((column,index)=>(\n                        <STh key={`th${column}${headerKey}${index}`}>\n                            {column}\n                        </STh>\n                            )\n                        )\n                    }\n                </STr>\n            </STHeader>\n            <STBody key={`${bodyKey}TBody`}>\n                {rows.map((row,rowIndex)=>\n                        (\n                        <STr key={`tr${bodyKey}TBody${rowIndex}`}>\n                            {columns.map((columnType,columnIndex) => \n                                    (\n                                    <STh key={`th${bodyKey}${columnIndex}${rowIndex}`}>\n                                        {cellElements? cellElements(row[columnType],rowIndex,columnIndex,columnType):(\n                                            \n                                            `${row[columnType]}`\n                                            )}\n                                    </STh>\n                                    )\n                                )\n                            }\n                        </STr>\n                        )\n                    )\n                }\n                \n                      \n            </STBody>\n        </STable >\n    )\n}\n\n\nconst STable = styled.table`\ntop:300px;\nborder-collapse:  collapse;\nbackground-color:transparent;\nwidth:  30px;         \ntable-layout: fixed; \nfont-weight: normal;\n`\nconst STr = styled.tr`\nborder:solid black 2px;\nbackground-color:transparent;\noverflow:auto;\nheight:30px;\nfont-weight: normal;\n`\n\nconst STh = styled.th`\nborder:solid black 2px;\nbackground-color:transparent;\noverflow:auto;\nwidth:110px;\nheight:30px;\nfont-weight: normal;\n`\nconst STHeader = styled.thead`\nbackground-color:#ff0066;\n`\nconst STBody = styled.tbody`\nfont-weight: normal;\nheight:300px;\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype Props = {\n    src:string\n    value:string\n    onChange?: ((event: React.ChangeEvent<HTMLTextAreaElement>) => void) | undefined\n}\nexport const TextareaAndImage:VFC<Props> = (props) =>{\n    const {src,value,onChange} = props\n    return (\n        <Contener>\n            <SImage src={src}></SImage>\n            <STextArea \n            spellCheck=\"false\"\n            value={value}\n            onChange={onChange}></STextArea>\n        </Contener>\n    )\n}\n\nconst Contener = styled.div`\nposition:relative;\n`\n\nconst STextArea = styled.textarea`\nwidth:300px;\nheight:230px;\noutline:none;\ncolor:transparent;\nbackground-color:transparent;\nborder:none;\nresize:none;\nposition:absolute;\ntop:0px;\nleft:0px;\nz-index:1;\n:hover{\n    opacity:0.3;\n    background-color:white;\n}\n`\nconst SImage = styled.img`\nposition:absolute;\nwidth:300px;\nheight:230px;\ntop:0px;\nleft:0px;\n`","import React,{ useEffect, useState ,VFC} from \"react\"\nimport styled from \"styled-components\"\ntype Props = {\n    lineColor?:string\n    defaultChildren?:string\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>)=>void\n    value?:string\n    id?:string\n    label?:string\n    onBlur?:((event: React.FocusEvent<HTMLInputElement>) => void) | undefined\n}\n\nexport const TransformInput:VFC<Props> = (props)=>{\n    const {lineColor=\"#3be5ae\",defaultChildren=\"Input password\"\n    ,onChange,id,value=\"\",label=\"\",onBlur} = props\n    const [color,setColor] = useState(\"lightgray\")\n    const [isInput,setIsInput] = useState(false)\n    const handleFocus = ()=>{\n        setColor(lineColor)\n    }\n    useEffect(()=>{\n        if(value.length > 0){\n            setIsInput(true)\n        }else{\n            setIsInput(false)\n        } \n    },[value])\n    return(\n        <SGroup>\n            <SLabel htmlFor=\"text\">{label}</SLabel>\n                <SPasswordBox color={color}>\n                    <SPassword_inner \n                    lineColor={lineColor}\n                    onFocus={handleFocus} \n                    onBlurCapture={()=>{setColor(\"lightgray\")}}>\n                    <SInput\n                        onBlur={onBlur}\n                        value={value}\n                        id={id}\n                        type=\"text\" \n                        onChange={onChange}></SInput>\n                    {isInput ? (<SP lineColor={lineColor}>\n                        {defaultChildren}\n                    </SP>):\n                    (<SPasswordString>\n                        {defaultChildren}\n                    </SPasswordString>)}\n                    \n                    </SPassword_inner>\n                </SPasswordBox>\n        </SGroup>\n    )\n}\nconst SGroup = styled.div`\nwidth:400px;\nheight:100px;\n`\nconst SLabel = styled.label`\n\n`\nconst SPasswordBox = styled.div.attrs(props=>({\n    color:props.color\n}))`\ndisplay: flex; /*アイコン、テキストボックスを調整する*/\nalign-items: center; /*アイコン、テキストボックスを縦方向の中心に*/\njustify-content: center; /*アイコン、テキストボックスを横方向の中心に*/\nwidth: 100%;\nheight: 50px;\nborder-radius: 5px;\nborder: 1px solid ${props=>props.color};\nmargin-top:3px;\n`\n\n\nconst SInput = styled.input`\nposition: absolute;\nz-index: 1; /*.password_stringよりも上に配置*/\nheight: 100%;\nwidth: 100%;\ntop: 0; left: 0; bottom: 0; right: 0;\nborder: none; /*枠線非表示*/\noutline: none; /*フォーカス時の枠線非表示*/\npadding: 0 10px;\nfont-size: 16px;\nbackground-color: transparent; /*後ろの.password_stringを見せるため*/\nbox-sizing: border-box; /*横幅の解釈をpadding, borderまでとする*/\n`\n\nconst SPasswordString = styled.div`\nposition: absolute;\nheight: 100%;\nwidth: 100%; /*文字列分の長さ*/\ntop: 0; left: 0; bottom: 0; right: 0;\npadding-left: 10px; /*position: absolute;でのmarginは親要素はみ出す*/\nfont-size: 16px;\nline-height: 50px; /*文字列を縦方向にmiddleに見せるため*/\nbackground-color: transparent;\ncolor: #80868b;\nbox-sizing: border-box; /*横幅の解釈をpadding, borderまでとする*/\ntransition: all 0.2s;\n-webkit-transition: all 0.2s;\n`\n\nconst SPassword_inner = styled.div<{lineColor:string}>`\nwidth: 100%;\nheight: 100%;\nbackground-color: transparent; /*.password_boxの枠線お角一部被るため透明に*/\nposition: relative;\n${SInput}:focus +  ${SPasswordString}{\n    color: ${props=>props.lineColor};\n    font-size: 10px;\n    line-height: 10px;\n    width: 85px;\n    height: 10px;\n    padding: 0 2px;\n    background-color: white;\n    transform:translate3d(5px, -6px, 0);\n}\n`\nconst SP = styled.div<{lineColor:string}>`\ncolor: ${props=>props.lineColor};\nfont-size: 10px;\nline-height: 10px;\nwidth: 85px;\nheight: 10px;\npadding: 0 2px;\nbackground-color: white;\ntransform:translate3d(5px, -6px, 0);\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\nconst errorType:[\"code\",\"sqlState\",\"errno\",\"sqlMessage\"] = [\"code\",\"sqlState\",\"errno\",\"sqlMessage\"]\ntype SQLError = {code:string,sqlState:string,errno:number,sqlMessage:string}\ntype Props = {\n    errors:SQLError[]\n}\nexport const SQLErrors:VFC<Props> = (props) =>{\n    const {errors} = props\n    return (\n        <>\n        {errors.length === 0 ? (null):(\n            <Contener>\n                {errors.map((error)=>(\n                    errorType.map((type,i)=>(\n                        <LineContener>\n                        <Errors key={`${type}${i}`}>{type}:{error[type]}</Errors>\n                        </LineContener>\n                    ))\n                ))}\n            </Contener>\n        )}\n        </>\n    )\n}\n\nconst LineContener = styled.div`\npadding-bottom:5px;\n`\n\nconst Contener = styled.div`\nmargin-bottom:20px;\n\n`\nconst Errors = styled.span`\ncolor:red;\nborder-bottom:solid red 1px;\n`","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype StatusMessage = {\n    fieldCount: number,\n    affectedRows: number,\n    insertId: number,\n    info: string,\n    serverStatus: number,\n    warningStatus: number\n  }\n\ntype Props = {\n    statusMessage:StatusMessage[]\n}\n\nconst messageType:[\"fieldCount\",\"affectedRows\",\"insertId\",\"info\",\"serverStatus\",\"warningStatus\"] = [\"fieldCount\",\"affectedRows\",\"insertId\",\"info\",\"serverStatus\",\"warningStatus\"]\nexport const StatusMessage:VFC<Props> = (props) => {\n    const {statusMessage} = props\n\n    return (\n        <>\n        {statusMessage.map((message)=>(\n            messageType.map((key,i)=>(\n                <SQLStatusMessage key={`${key}${i}`}>{key}:{message[key].toString()}</SQLStatusMessage>\n            ))\n        ))}\n        <br></br>\n        </>\n    )\n}\n\nconst SQLStatusMessage = styled.div`\n\n`","import {userState,hostState,passwordState,dbState} from \"store/dbInfo\"\nimport {useRecoilValue} from \"recoil\"\n\nexport const useDBInfo = () => {\n    const user = useRecoilValue(userState)\n    const password = useRecoilValue(passwordState)\n    const host = useRecoilValue(hostState)\n    const db = useRecoilValue(dbState)\n    return {\n        user:user,\n        password:password,\n        host:host,\n        database:db\n    }\n}\n\n\n","import styled from \"styled-components\"\nimport {useEffect, useState} from \"react\"\nimport {Table} from \"../atoms/Table\"\nimport {postDataAndReturnResposeJson,caseNotTable} from \"../../functions/tableFunctions\"\nimport {VFC} from \"react\"\nimport { TextareaAndImage } from \"../molecules/TextareaAndImage\"\nimport {TransformInput} from \"../atoms/TransformInput\"\nimport {ContainedButtons} from \"../atoms/Bottun_MatirialUI\"\nimport { SQLErrors } from \"components/atoms/SQLErrors\"\nimport {StatusMessage} from \"../atoms/StatusMessage\"\nimport {focusElement} from \"functions/focusElement\"\nimport {useDBInfo} from \"store/provideDBInfo\"\ntype Props = {\n    url:string\n    initColumns:string[]\n    initState?:{\n        [key: string]: string;\n    }\n    CloneClass:any\n    sqlType:\"insert\"|\"create\"\n}\ntype StatusType = {\n    fieldCount: number,\n    affectedRows: number,\n    insertId: number,\n    info: string,\n    serverStatus: number,\n    warningStatus: number\n  }\n\ntype SQLError = {code:string,sqlState:string,errno:number,sqlMessage:string}\ntype Results = {\n    results:[[{affectedRows: number\n    fieldCount: number\n    info: string\n    insertId: number\n    serverStatus: number\n    warningStatus: number},null]]\n    error:SQLError[]\n}\nexport const TextareaToSQL:VFC<Props> = (props) =>{\n    const {url,initColumns,CloneClass,sqlType,initState} = props\n    type OneLineCells = {[key:string]:string|null}\n    type CellChageEvent = React.ChangeEvent<HTMLSelectElement> | React.ChangeEvent<HTMLInputElement>\n    const [errors,setErrors] = useState<SQLError[]>([])\n    const [focusIndex,setFocusIndex] = useState([0][0])\n    const [tableName,setTableName] = useState(\"\")\n    const [results, setResults] = useState<StatusType[]>([])\n    const [multiLineCells,setMultiLineCells] = useState<{[key:string]:string|null}[]>([])\n    const [textarea,setTextarea] = useState(\"\")\n    const [columns,setColumns] = useState(initColumns.slice())\n    const dbConfig = useDBInfo()\n    const sendTableNameAndsetColumns = (e: React.FocusEvent<HTMLInputElement>) => {\n        if(sqlType === \"create\"){\n            return\n        }\n        const sendTableName = {\n            tableName:e.target.value,\n            dbInfo:dbConfig\n        }\n        postDataAndReturnResposeJson(sendTableName,\"showTableColumn\")\n        .then((results:{\"results\":[[{\"Field\":string,\"Default\":string}],[{[key:string]:string}]]})=>{\n            let columnsName:string[] = []\n            try{\n                results.results[0].map((filed)=>{\n                    if(filed.Default === null){\n                        columnsName = [...columnsName,filed.Field]\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n            setColumns(columnsName)\n            if(sqlType===\"insert\"){\n                let newRow:OneLineCells = Object.assign({},initState)\n                columnsName.map((column)=>{\n                    newRow[column] = \"\"\n                })\n                setMultiLineCells([...multiLineCells,newRow])\n            }\n        })\n    }\n    useEffect(()=>{\n        if(initState){\n            setMultiLineCells([Object.assign({},initState)])\n        }\n    },[])\n\n    const sendDataAndSetResults = () => {\n        const sendDatas = {\n                tableName:tableName,\n                multiLineCells:multiLineCells,\n                dbInfo:dbConfig\n            }\n        postDataAndReturnResposeJson(sendDatas,url)\n        .then((results:Results)=>{\n            setErrors(results[\"error\"])\n            let resultsTemp:StatusType[] = []\n            results.results.map((result)=>{\n                result.filter((value)=>{\n                    if(value!==null){\n                        resultsTemp = [...resultsTemp,value]\n                    }\n                })\n            })\n            setResults(resultsTemp)\n        }\n            )\n    }\n    \n    const pasteToTable = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        if(caseNotTable(e.target.value,sqlType)){\n            return\n        }\n        const rows = e.target.value.split(\"\\n\")\n        const cloneClass = new CloneClass(multiLineCells,e.target.value)\n        if(sqlType === \"insert\"){\n            setColumns(rows[0].split(\"\\t\"))\n            rows.map((row,i)=>{\n                if(i!==0){\n                    cloneClass.makeClone(row)\n                }\n            })\n        }else{\n            rows.map((row)=>{\n                cloneClass.makeClone(row)\n            })\n        }\n        setMultiLineCells(cloneClass.clone)\n    }\n    const handleChange = (e:CellChageEvent,index:number,column:string) => {\n        multiLineCells[index][column] = e.target.value\n        setMultiLineCells([...multiLineCells])\n    }\n    const isDataExist = () => {\n        switch(sqlType){\n            case \"create\":\n                if(multiLineCells[0][\"DataName\"]===\"\"){\n                    alert(\"1つ目のデータを定義してください\")\n                    return false\n                }\n                return true\n            case \"insert\":\n                if(multiLineCells.length < 1){\n                    alert(\"データを挿入してください\")\n                    return false\n                }\n                return true\n            }\n        }\n\n    const addRows = () => {\n        if(isDataExist()){\n            let newRow:OneLineCells = Object.assign({},initState)\n            if(sqlType === \"insert\"){\n                initColumns.map((column)=>{\n                newRow[column] = null\n                })\n            }\n            setMultiLineCells([...multiLineCells,newRow])\n        }\n    }\n    const resetAndChangeUI = () => {\n        setColumns(initColumns.slice())\n        if(initState){\n            setMultiLineCells([Object.assign({},initState)])\n        }else{\n            setMultiLineCells([])\n        }\n        setErrors([])\n        setResults([])\n    }\n\n\n    const cellChildren = (value:string|null,rowIndex:number,columnIndex:number,column:string) => {\n        switch(column){\n            case \"IsPrimary\":\n                return(\n                    <>\n                        <SSelect id={`${rowIndex.toString()}_${columnIndex.toString()}`} onChange={(e)=>handleChange(e,rowIndex,column)} defaultValue={\"\"}>\n                                <SOption value={\"\"}></SOption>\n                                <SOption  value={\"PRIMARY\"}>PRIMARY</SOption>\n                            </SSelect>\n                    </>\n                )\n            case \"Option\":\n                return(\n                    <SSelect id={`${rowIndex.toString()}_${columnIndex.toString()}`} onChange={(e)=>handleChange(e,rowIndex,column)} defaultValue=\"\">\n                        <SOption value=\"\"></SOption>\n                        <SOption value=\"AUTO INCREMENT\">AUTO INCREMENT</SOption>\n                        <SOption value=\"DEFAULT CURRENT_TIMESTAMP\">DEFAULT CURRENT_TIMESTAMP</SOption>\n                        <SOption value=\"DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\">DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</SOption>\n                    </SSelect>\n                )\n            case \"IsNull\":\n                return(\n                    <SSelect id={`${rowIndex.toString()}_${columnIndex.toString()}`} onChange={(e)=>handleChange(e,rowIndex,column)} defaultValue=\"NOT NULL\">\n                        <SOption value=\"NOT NULL\" >NOT NULL</SOption>\n                            <SOption value=\"NULL\">NULL</SOption>\n                    </SSelect>\n                )\n            default:\n                return(\n                    <TableTextArea\n                        id={`${rowIndex.toString()}_${columnIndex.toString()}`}\n                        spellCheck=\"false\"\n                        value={value===null ? \"\":value}\n                        onChange={(e)=>handleChange(e,rowIndex,column)}/>\n                )\n            }\n    }\n\n    return(\n        <Contener>\n            <InputContener>\n                <TransformInput\n                    onBlur={sendTableNameAndsetColumns}\n                    lineColor={\"red\"}\n                    defaultChildren={\"Input table name\"}\n                    value={tableName}\n                    onChange={(e)=>setTableName(e.target.value)}/>\n                </InputContener>\n            <ImageContener>\n                <TextareaAndImage\n                    src={\"../../../image/db.png\"}\n                    onChange={pasteToTable}\n                    value={textarea}/>\n            </ImageContener>\n            <TitleContener>\n                {sqlType.toLocaleUpperCase()}\n            </TitleContener>\n            <TableContener>\n                <SQLErrors\n                    errors={errors}/>\n                <StatusMessage \n                    statusMessage={results}/>\n                <Table\n                    columns={columns}\n                    rows={multiLineCells}\n                    cellElements={cellChildren}\n                    headerKey={`header${sqlType}`}\n                    bodyKey={`body${sqlType}`}\n                    tableKey={`table${sqlType}`}/> \n            </TableContener>\n            <ButtonsContener>\n                <ContainedButtons \n                    onClick={sendDataAndSetResults}\n                    color=\"primary\"\n                    value={\"EXECUTE\"}/>\n                <ContainedButtons \n                    onClick={addRows}\n                    color=\"primary\"\n                    value={\"ADD\"}\n                    />\n                <ContainedButtons\n                    onClick={resetAndChangeUI}\n                    color=\"secondary\"\n                    value={\"RESET\"}/>\n            </ButtonsContener>\n        </Contener>\n        \n    )\n}\n\nconst Contener = styled.div`\nposition:absolute;\n// overflow:auto;\ndisplay:grid;\nwidth:600px;\nheight:100%;\ngrid-template-columns:70px 460px 70px;\ngrid-template-rows:130px 250px 100px 40px 1fr;\n`\nconst InputContener = styled.div`\nmargin:20px;\ngrid-row:1/2;\ngrid-column:2/3;\n`\n\nconst TitleContener = styled.div`\ngrid-row:4/5;\ngrid-column:1/2;\nfont-size:30px;\nfont-weight:bold;\n`\nconst ImageContener = styled.div`\nwidth:310px;\nheight:220px;\ndisplay:flex;\ntext-align:center;\ngrid-row: 2 / 3;\ngrid-column: 2 / 3;\n`\n\n\nconst TableContener = styled.div`\ngrid-row: 5 / 6;\ngrid-column: 1 / 4;\noverflow:auto;\n//border:solid #d4d9df 1px;\n`\n\nconst ButtonsContener = styled.div`\ngrid-row: 3 / 4;\ngrid-column: 2 / 3;\nmargin-top:45px;\ndisplay:flex;\njustify-content:space-around;\n`\n\n\nconst InputAndCopyBoxStyle =  \n`\nborder-bottom-width:0;\nborder-left-width:0;\nborder-right-width:0;\nborder-top-width:0;\nfont-style:normal;\nfont-variant:normal;\nfont-weight:normal;\nletter-spacing:0px;\nword-spacing:0px;\nline-height:normal;\npadding-bottom:5px;\npadding-left:5px;\npadding-right:5px;\npadding-top:5px;\ntext-decoration:none;\nwidth:100%;\n`\n\nconst TableTextArea = styled.input`\nbackground-color:transparent;\nborder:none;\noutline:none;\nwidth:150px;\nfont-size:15px;\n${InputAndCopyBoxStyle};\nbox-sizing: border-box;\noverflow:auto;\n`\nconst SSelect = styled.select`\nwidth:100%;\nheight:100%;\noutline:none;\nborder:none;\n`\nconst SOption = styled.option`\nwidth:100%;\nheight:100%;\noutline:none;\nborder:none;\n`","import {TextareaToSQL} from \"./TextareaToSQL\"\n\nconst url = \"copyToCreate\"\nconst constColumns = [\"DataName\",\"DataType\",\"IsPrimary\",\"Option\",\"IsNull\"]\n\nexport const TextareaCreateProps = () =>{\n    type OneLineCells = {[key:string]:string}\n    class MultiLineCellsClone {\n        clone:OneLineCells[]\n        constructor(multiLineCells:OneLineCells[],_:string){\n            if(multiLineCells[0].DataName === \"\"){\n                this.clone = []\n            }else{\n                this.clone = multiLineCells\n            }\n        }\n        setOneLineCells(joinRow:string){\n            const nameAndType = joinRow.split(\"\\t\")\n            const cells:OneLineCells ={\n                DataName:nameAndType[0],\n                DataType:nameAndType[1],\n                Option:\"\",\n                IsPrimary:\"\",\n                IsNull:\"NOT NULL\"\n            }\n            return cells\n        }\n        appendCells(cells:OneLineCells){\n            this.clone = [...this.clone,cells]\n        }\n        makeClone(joinRow:string){\n            const cells = this.setOneLineCells(joinRow)\n            this.appendCells(cells)\n        }\n    }\n    const initLine:OneLineCells = {\n        DataName:\"\",\n        DataType:\"\",\n        IsPrimary:\"\",\n        Option:\"\",\n        IsNull:\"NOT NULL\"\n    } \n    return (\n        <TextareaToSQL\n            url={url}\n            initColumns={constColumns}\n            initState={initLine}\n            CloneClass={MultiLineCellsClone}\n            sqlType={\"create\"}/>\n    )\n}\n","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype makeElement = (value:string,rowIndex:number,valueIndex:number)=>JSX.Element\n\ntype Props = {\n    columns:string[]\n    rows:string[][]\n    tableKey:string\n    headerKey:string\n    bodyKey:string\n    cellElements?:makeElement//string//tyuui\n}\nexport const Table:VFC<Props> = (props)=>{\n    const {columns,rows,headerKey,bodyKey,tableKey,cellElements} = props\n    return(\n        <STable key={`Table${tableKey}`}>\n            <STHeader key={`${headerKey}THeader`}>\n                <STr key={`tr${headerKey}THeader`}>\n                    {columns.map((column,index)=>(\n                        <STh key={`th${column}${headerKey}${index}`}>\n                            {column}\n                        </STh>\n                            )\n                        )\n                    }\n                </STr>\n            </STHeader>\n            <STBody key={`${bodyKey}TBody`}>\n                {rows.map((row,rowIndex)=>(\n                    <STr key={`tr${bodyKey}TBody${rowIndex}`}>\n                        {row.map((value,index)=>(\n                            <STh key={`th${bodyKey}${index}`}>\n                                {cellElements ? (\n                                    cellElements(value,rowIndex,index)\n                                ):(<TableSpan>\n                                 {value} \n                                 </TableSpan>  \n                                ) }\n                            </STh>\n                                )\n                            )\n                        }\n                    </STr>\n                        )\n                    )\n                }\n            </STBody>\n        </STable >\n    )\n}\n\n\nconst STable = styled.table`\ntop:300px;\nborder-collapse:  collapse;\nbackground-color:transparent;\nwidth:  30px;         \ntable-layout: fixed; \n`\n\nconst TableSpan = styled.span`\nfont-weight:normal;\n`\nconst STr = styled.tr`\nborder:solid black 2px;\nbackground-color:transparent;\noverflow:auto;\nheight:30px;\n\n`\n\nconst STh = styled.th`\nborder:solid black 2px;\nbackground-color:transparent;\noverflow:auto;\nwidth:110px;\nheight:30px;\n`\nconst STHeader = styled.thead`\nbackground-color:#ff0066;\n`\nconst STBody = styled.tbody`\n\n`","import {TextareaToSQL} from \"./TextareaToSQL\"\n\nexport const TextareaInsertProps = () => {\n    const url = \"copyToInsert\"\n    const constColumns:string[] = []\n    type ColumnValue = {[key:string]:string}\n    const sqlType = \"insert\"\n    class ColumnValueClone{\n        clone:ColumnValue[]\n        columns:string[]\n        constructor(columnsValues:ColumnValue[],copyDatas:string){\n            this.clone = columnsValues\n            this.columns = this.setColumns(copyDatas)\n        }\n        setColumns(copyDatas:string){\n            return copyDatas.split(\"\\n\")[0].split(\"\\t\")\n        }\n        setOneLineValues(row:string){\n            const values = row.split(\"\\t\")\n            let columnsAndValues:{[key:string]:string}= {}\n            this.columns.map((column,i)=>{\n                columnsAndValues[column] = values[i]\n            })\n            return columnsAndValues\n        }\n        appendColumnValuse(columnsAndValues:{[key:string]:string}){\n            this.clone = [...this.clone,columnsAndValues]\n        }\n        makeClone(row:string){\n            const columnsAndValues = this.setOneLineValues(row)\n            this.appendColumnValuse(columnsAndValues)\n        } \n    }\n\n    return (\n        <TextareaToSQL\n            url={url}\n            initColumns={constColumns}\n            sqlType={sqlType}\n            CloneClass={ColumnValueClone}/>\n    )\n}\n   ","import styled from \"styled-components\"\nimport {VFC} from \"react\"\n\ntype Props = {\n    otherList:string[]\n}\n\nexport const OtherList:VFC<Props> = (props) =>{\n    const {otherList} = props\n    return (\n        <>\n        {otherList.length === 0 ? (null) : (\n            <Contener>\n        {otherList.map((other,i)=>(\n            <div>\n            <OtherResults key={`${other}${i}`}>{other}</OtherResults>\n            </div>\n            ))}\n            </Contener>\n        )}\n        </>\n    )\n}\n\nconst Contener = styled.div`\npadding-bottom:20px;\n`\n\nconst OtherResults = styled.span`\n//padding-bottom:5px;\nborder-bottom:solid #e7e7eb 1px;\n`","import { useState } from \"react\"\nimport styled from \"styled-components\"\nimport {ButtonAppBar} from \"../atoms/ButtonAppBar-MaterialUI\"\nimport { EditersAndButton } from \"../organisms/EditersAndButton\" \nimport { TextareaCreateProps} from \"../organisms/TextareaCreateprops\"\nimport { removeLastChar } from \"functions/editerFucntions\"\nimport {postDataAndReturnResposeJson} from \"functions/tableFunctions\"\nimport {Table as TableEditer} from \"../atoms/TableEditer\"\nimport { TableContainer } from \"@material-ui/core\"\nimport {TextareaInsertProps} from \"../organisms/TextareInsertProps\"\nimport { SQLErrors } from \"components/atoms/SQLErrors\"\nimport { OtherList } from \"components/atoms/OtherList\"\nimport { sentencesState } from \"store/sentences\";\nimport {useRecoilValue} from \"recoil\"\nimport {useDBInfo} from \"store/provideDBInfo\"\n\n\ntype IorC = \"insert\" | \"create\"\ntype SQLError = {code:string,sqlState:string,errno:number,sqlMessage:string}\ntype EditerResults = {select:{[key:string]:string}[][]\n                        error:SQLError[]\n                        other:{[key:string]:string}[][]}\n\nexport const SQLExrcuters = () =>{\n    const sentences = useRecoilValue(sentencesState)\n    const dbConfig = useDBInfo()\n    const [rows,setRows] = useState<string[][][]>([[[]]])\n    const [columns, setColumns] = useState<string[][]>([[]])\n    const [IorC,setIorC] = useState<IorC>(\"create\")\n    const [errorMessages,setErrorMessages] = useState<SQLError[]>([])\n    const [otherResults,setOtherResults] = useState<string[]>([])\n    const onClick = () =>{\n        setErrorMessages([])\n        setOtherResults([])\n        setColumns([[]])\n        setRows([[[]]])\n        const querys = returnQuerys()\n        const postData = {\n            dbInfo:dbConfig,\n            querys:querys\n        }\n        const url = \"editerhandler\"\n        postDataAndReturnResposeJson(postData,url)\n        .then((data:EditerResults)=>{\n            if(data[\"select\"].length !== 0){\n                const results = new Map<string,Object[]>(Object.entries(data[\"select\"]))\n                let cloneColumns:string[][] = []\n                let cloneValues:string[][][] = []\n                let valuesBuff:string[][]= []\n                try{\n                    results.forEach((result)=>{\n                        if(result[0]!==undefined){\n                            const columnsList = Object.keys(result[0])\n                            cloneColumns.push(columnsList)\n                            result.map((value)=>{\n                                const dataValuse:string[] = Object.values(value)\n                                valuesBuff.push(dataValuse)\n                            })\n                            cloneValues.push(valuesBuff)\n                            valuesBuff=[]\n                        }\n                    })\n                }catch(e){console.log(e)}\n                if(cloneColumns.length !== 0 && cloneValues.length !== 0){\n                    setRows(cloneValues)\n                    setColumns(cloneColumns)\n                }\n            }\n            if(data[\"error\"]){\n                setErrorMessages(data[\"error\"])\n            }\n            if(data[\"other\"]){\n                let otherList:string[] = []\n                data[\"other\"].map((others)=>{\n                    try{\n                        others.map((other)=>{\n                            Object.keys(other).map((key)=>{\n                                const displayOther = `${key}:${other[key]}`\n                                otherList = [...otherList,displayOther]\n                            })\n                        })\n                    }catch(e){\n                    }\n                })\n                setOtherResults(otherList)\n            }\n        })\n    }\n    const returnQuerys = () =>{\n        let oneLineQuery = sentences.join(\"\")\n        if(oneLineQuery[oneLineQuery.length-1]===\";\"){\n            oneLineQuery = removeLastChar(oneLineQuery)\n        }\n        const querys = oneLineQuery.split(\";\")\n        return querys\n    }\n   \n    return (\n        <Contener>\n            <HeaderContener>\n                <ButtonAppBar\n                    buttons={[\"INSERT\",\"CREATE\"]}\n                    onClick={[(e)=>setIorC(\"insert\"),(e)=>setIorC(\"create\")]}/>\n            </HeaderContener>\n            <EditersContener>\n                {/* //<RecoilRoot> */}\n                    <EditersAndButton\n                        onClick={onClick}/>\n                {/* //</RecoilRoot> */}\n            </EditersContener>\n            <CopyDBContener>\n                {IorC === \"create\" ? (\n                    <TextareaCreateProps></TextareaCreateProps>\n                ):(\n                    <TextareaInsertProps></TextareaInsertProps>\n                )}\n            </CopyDBContener>\n            <Results>Results</Results>\n            <TablesConetener\n                id={`tableContener`}>\n            {columns.map((column,i)=>(\n                <>\n                <SQLErrors\n                    errors={errorMessages}/>\n                <OtherList\n                    otherList={otherResults}/>\n                <TableContainer>\n                <TableEditer\n                    rows={rows[i]}\n                    columns={column}\n                    tableKey={`select${i}`}\n                    headerKey={`select${i}`}\n                    bodyKey={`select${i}`}\n                />\n                </TableContainer>\n                <br></br>\n                </>\n            ))}\n            </TablesConetener>\n            \n        </Contener>\n    )\n}\n\nconst Results = styled.div`\nfont-size:30px;\nmargin:0px;\nfont-weight:bold;\nmargin-left:30px;\n`\n\nconst Contener = styled.div`\noverflow:auto;\ndisplay:grid;\nwidth:100%;\nheight:100%;\ngrid-template-rows:70px 480px 1fr;\ngrid-template-columns:50% 50%;\n`\n\n\nconst HeaderContener = styled.div`\ngrid-row:1/2;\ngrid-column:1/3;\n`\nconst EditersContener = styled.div`\ngrid-row:2/3;\ngrid-column:1/2;\nmargin-left:30px;\n`\n\nconst CopyDBContener = styled.div`\ngrid-row:2/3;\ngrid-column:2/3;\nmargin-left:30px;\n`\n\nconst TablesConetener = styled.div`\ngird-row:3/4;\ngrid-column:1/2;\npadding:10px;\nborder:solid #d4d9df 1px;\nmargin-left:30px;\n`\n","import { SQLExrcuters } from \"components/pages/SQLExecuters\";\nimport {Login} from \"components/pages/Login\"\nimport {RecoilRoot} from \"recoil\"\nexport const homeRoutes = [\n    {\n        path:\"\",\n        exact:true,\n        children:<Login />\n    },\n    {\n        path:\"executers\",\n        exact:false,\n        children:<SQLExrcuters />\n    },\n   \n]","import { Route,Switch } from \"react-router-dom\"\nimport {Login} from \"../components/pages/Login\"\nimport {homeRoutes} from \"./HomeRoutes\"\nexport const Router = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Login/>\n            </Route>\n            <Route path=\"/\" render ={({match:{url}})=>(\n                <Switch>\n                {homeRoutes.map((route)=>(\n                    <Route \n                        key={route.path} \n                        exact={route.exact} \n                        path={`${url}${route.path}`}\n                        children={route.children}\n                        />\n                ))}\n                </Switch>\n            )}\n            />\n        </Switch>\n    )\n}","import {BrowserRouter} from \"react-router-dom\"\nimport {Router} from \"router/Router\"\nimport React from \"react\"\nimport {RecoilRoot} from \"recoil\"\nfunction App() {\n  return (\n    <RecoilRoot>\n    <BrowserRouter>\n      <Router></Router>\n    </BrowserRouter>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}